{"version":3,"sources":["./src/app/exercice/Ex82/Ex82.component.ts","./src/app/exercice/Ex82/Ex82.component.html","./src/app/exercice/Ex65/Ex65.component.ts","./src/app/exercice/Ex65/Ex65.component.html","./src/app/exercice/Ex112/Ex112.component.ts","./src/app/exercice/Ex112/Ex112.component.html","./src/app/exercice/Ex23/Ex23.component.ts","./src/app/exercice/Ex23/Ex23.component.html","./src/app/exercice/Ex52/Ex52.component.ts","./src/app/exercice/Ex52/Ex52.component.html","./src/app/exercice/Ex61/Ex61.component.ts","./src/app/exercice/Ex61/Ex61.component.html","./src/app/solution/solution.component.ts","./src/app/solution/solution.component.html","./src/app/nav-bar/nav-bar.component.ts","./src/app/nav-bar/nav-bar.component.html","./src/app/exercice/Ex81/Ex81.component.ts","./src/app/exercice/Ex81/Ex81.component.html","./src/environments/environment.ts","./src/app/exercice/Ex62/Ex62.component.ts","./src/app/exercice/Ex62/Ex62.component.html","./src/app/exercice/Ex33/Ex33.component.ts","./src/app/exercice/Ex33/Ex33.component.html","./src/app/exercice/Ex22/Ex22.component.ts","./src/app/exercice/Ex22/Ex22.component.html","./src/app/exercice/Ex63/Ex63.component.ts","./src/app/exercice/Ex63/Ex63.component.html","./src/app/exercice/sheet1Ex1/sheet1Ex1.component.ts","./src/app/exercice/sheet1Ex1/sheet1Ex1.component.html","./src/app/exercice/Ex12/Ex12.component.ts","./src/app/exercice/Ex12/Ex12.component.html","./src/app/exercice/Ex43/Ex43.component.ts","./src/app/exercice/Ex43/Ex43.component.html","./src/app/exercice/Ex111/Ex111.component.ts","./src/app/exercice/Ex111/Ex111.component.html","./src/app/tasks/tasks.component.ts","./src/app/tasks/tasks.component.html","./src/app/exercice/Ex53/Ex53.component.ts","./src/app/exercice/Ex53/Ex53.component.html","./src/app/exercice/Ex41/Ex41.component.ts","./src/app/exercice/Ex41/Ex41.component.html","./src/app/body/body.component.ts","./src/app/body/body.component.html","./src/app/exercice/Ex51/Ex51.component.ts","./src/app/exercice/Ex51/Ex51.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/exercice/Ex72/Ex72.component.ts","./src/app/exercice/Ex72/Ex72.component.html","./src/app/exercice/Ex92/Ex92.component.ts","./src/app/exercice/Ex92/Ex92.component.html","./src/app/exercice/Ex44/Ex44.component.ts","./src/app/exercice/Ex44/Ex44.component.html","./src/app/app.module.ts","./src/app/exercice/Ex64/Ex64.component.ts","./src/app/exercice/Ex64/Ex64.component.html","./src/app/exercice/Ex13/Ex13.component.ts","./src/app/exercice/Ex13/Ex13.component.html","./src/app/exercice/Ex31/Ex31.component.ts","./src/app/exercice/Ex31/Ex31.component.html","./src/app/exercice/Ex14/Ex14.component.ts","./src/app/exercice/Ex14/Ex14.component.html","./src/app/exercice/exercice.component.ts","./src/app/exercice/exercice.component.html","./src/app/exercice/Ex42/Ex42.component.ts","./src/app/exercice/Ex42/Ex42.component.html","./src/app/exercice/Ex71/Ex71.component.ts","./src/app/exercice/Ex71/Ex71.component.html","./src/app/exercice/Ex91/Ex91.component.ts","./src/app/exercice/Ex91/Ex91.component.html","./src/app/exercice/Ex113/Ex113.component.ts","./src/app/exercice/Ex113/Ex113.component.html","./src/app/exercice/Ex102/Ex102.component.ts","./src/app/exercice/Ex102/Ex102.component.html","./src/app/exercice/Ex101/Ex101.component.ts","./src/app/exercice/Ex101/Ex101.component.html","./src/app/exercice/Ex103/Ex103.component.ts","./src/app/exercice/Ex103/Ex103.component.html","./src/app/exercice/Ex32/Ex32.component.ts","./src/app/exercice/Ex32/Ex32.component.html","./src/app/app-routing.module.ts","./src/app/exercice/aboutMe/aboutMe.component.ts","./src/app/exercice/aboutMe/aboutMe.component.html","./src/app/exercice/Ex21/Ex21.component.ts","./src/app/exercice/Ex21/Ex21.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-Ex82',\n  templateUrl: './Ex82.component.html',\n  styleUrls: ['./Ex82.component.scss']\n})\nexport class Ex82Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div id=\"aufgabe\">\n  <h1>8.2 async/await</h1>\n  <p><b>Lösen Sie die letzte Aufgabe mit async / await statt Promise. </b></p>\n  <p><b>QUELLCODE:</b></p>\n\n  <pre>&lt;!DOCTYPE html>\n    &lt;html>\n    \n    &lt;head>\n    \n        &lt;script>\n           \n    (async _=> &#123;\n           var texta\n            var textb \n    \n                    await Promise.all([\n                        (async _=> a = await readFile('.A.txt'))(),\n                        (async _=> b = await readFile('.B.txt'))()\n                    ]);\n    \n           \n                var maxlen = (arrayA.length >= arrayB.length) ? maxlen = arrayA.length : maxlen = arrayB.length;\n    \n                for (var i = 0; i &lt; maxlen; i++) &#123;\n                    document.getElementById(\"feld\").textContent += arrayA[i] + arrayB[i];\n                &#125;\n            &#125;);\n                     async function readFile(text)&#123;\n                    let importText = await fetch(text);\n                    let newText = await importText.text();\n                    return newText.split('\\r\\n');\n                &#125;\n    \n        &lt;/script>\n    \n    &lt;/head>\n    \n    &lt;body>\n        &lt;div>\n            &lt;h1>8.1. Promises&lt;/h1>\n            &lt;div id=\"feld\">&lt;/div>\n    \n        &lt;/div>\n    \n    &lt;/body>\n    \n    &lt;/html>\n    \n        </pre>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-Ex65',\n  templateUrl: './Ex65.component.html',\n  styleUrls: ['./Ex65.component.scss']\n})\nexport class Ex65Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div id=\"aufgabe\">\n  <h1>6.5. DeepCopy</h1>\n  <p><b>Schreiben Sie eine rekursive Funktion deepCopy( struct ) als ES6-Ausdruck, so dass beliebig geschachtelte Arrays\n      und Objekte struct tiefenkopiert werden können\n      . Verwenden Sie zu diesem Zweck den<a\n        href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Conditional_Operator\"\n        target=\"_blank\"> konditionalen ternären Operator </a> ,<a\n        href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map\"\n        target=\"_blank\"> Array.map()</a>,\n      <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/fromEntries\"\n        target=\"_blank\">Object.fromEntries() </a>und <a\n        href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/entries\"\n        target=\"_blank\">Object.entries()</a>. Verwenden Sie dabei nur Arrow Functions und Ausdrücke,\n      keine Anweisungen, keine Blöcke. Verwenden Sie nicht die JSON-Methoden. </b></p>\n  <p>Geben Sie die HTML-Seite inkl. ES6-Code inkl. Tests hier ein. Verwenden Sie für Ihre Tests die Funktion <a\n      href=\"https://developer.mozilla.org/de/docs/Web/API/Console/assert\" target=\"_blank\">console.assert</a>. </p>\n  <p>QUELLCODE:</p>\n  <pre>\n    const struct = &#123;\n      name: \"omar\",\n      vorname: \"guella\",\n      objekt: &#123;\n          matrikel: [\"student\", 123]\n      &#125;\n  &#125;\n  const deepCopy = (struct) => &#123;\n      return Object.fromEntries(Object.entries(struct));\n  &#125;\n  const copy = deepCopy(struct);\n  \n  console.assert(struct === copy, \"richtig copiert\");\n  console.assert(struct !== copy, \"ACHTUNG nicht richtig copiert\");\n    </pre>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-Ex112',\n  templateUrl: './Ex112.component.html',\n  styleUrls: ['./Ex112.component.scss']\n})\nexport class Ex112Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"middlepane\">\n    <div id=\"aufgabe\">\n\n      <h1>11.2 Login mit PHP</h1>\n      <p><b>Schreiben Sie eine sichere PHP-Lösung für Login, das die persistierten Registrierungsdaten aus der\n          letzten\n          Aufgabe nutzt. </b></p>\n      <p>Geben Sie alle Ihre PHP-Skripte hier an:</p>\n\n      <pre>\n        &lt;?php\n        \n            $username = $_POST['username'];\n            $Password = $_POST[\"password\"];\n        \n            $lines = file(\"./Accounts.csv\");\n            $Account = false;\n            foreach($lines as $line_num => $line)&#123;\n                list( $csvUsername, $csvPassword) = explode(\",\", $line);\n                if($csvUsername === hash(\"sha256\", $username))&#123;\n                    if($csvPassword === hash(\"sha256\", $Password) . \"\\n\")&#123;\n                        echo \"&lt;script>alert('Login erfolgreich!')&lt;/script>\";\n                        $Account = true;\n                        break;\n                    &#125;\n                &#125;\n            &#125;\n            if(!$Account && ($username || $Password))&#123;\n                echo \"&lt;script>alert('Name oder Password falsch!')&lt;/script>\";\n            &#125;\n        \n        ?>\n\t</pre>\n      <p>Geben Sie Ihren Client-Code (HTML, CSS, Javascript), falls zusätzlich zum PHP-Skript vorhanden, hier an:<p>\n\n          <pre>\n            &lt;!DOCTYPE html>\n&lt;html>\n&lt;head>\n\n&lt;/head>\n\n\n    &lt;div class=main> \n    &lt;h1>LOGIN&lt;/h1>\n&lt;form method=\"post\">\n        Username:&lt;br>\n        &lt;input type=\"text\" name=\"username\">\n        &lt;br>\n        PASSWORD:&lt;br>\n        &lt;input type=\"password\" name=\"password\">\n        &lt;br>\n        &lt;input type=\"submit\" >\n&lt;/form>\n\n\n\n&lt;/div>\n\n&lt;/html>\n\n\t</pre>\n\n    </div>\n  </div>\n  <div class=\"rightpane\">\n    <p id=\"ausfuhren\"> QUELLCODE AUSFÜHREN</p>\n    <a class=\"execute\" href=\"http://localhost/phpscript/login.php\" target=\"_blank\">klicken SIE HIER BITTE !</a>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-Ex23',\n  templateUrl: './Ex23.component.html',\n  styleUrls: ['./Ex23.component.scss']\n})\nexport class Ex23Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"container\">\r\n  <div class=\"middlepane\">\r\n    <div id=\"aufgabe\">\r\n      <h1>Aufgabe 2.3. Wireframe with HTML and CSS</h1>\r\n      <p>Gegeben ist folgendes HTML-Wireframe:<p>\r\n          <img src=\"https://kaul.inf.h-brs.de/we/assets/img/survey.png\" style=\"max-width:600px;width:100%\">\r\n          <p>Hinweis zu den Farben: Firefox DevTools anthalten eine Pipette namens <a\r\n              href=\"https://developer.mozilla.org/de/docs/Tools/Eyedropper\" target=\"_blank\">\"Eyedropper\"</a>, mit der\r\n            man\r\n            die Farben aus einer Webseite auslesen kann. Die grünliche Farbe im Rahmen des Wireframes ist demnach\r\n            #b2d6d1,\r\n            Hinweis zu den Schriften (Fonts): Die größte Sammlung an \"kostenlosen\" Web-Schriften stammt von Google und\r\n            ist\r\n            unter<a href=\"https://fonts.google.com/\" target=\"_blank\"> Google Fonts</a> zu finden. Wer lieber aus dem\r\n            Vorrat\r\n            an<a href=\"https://www.zeichenschatz.net/typography/websichere-schriften\" target=\"_blank\"> vorhanden\r\n              Schriften</a> auswählt, wird unter websichere Schriften fündig.\r\n            Frage: Mit welchem HTML- und CSS-Code kann man diesen Wireframe exakt nachbilden?\r\n            Schreiben Sie Ihren CSS-Code direkt in die HTML-Datei. Geben Sie Ihren HTML- und CSS-Quellcode zusammen\r\n            in dieses Textfeld ein:\r\n            <p><b>QUELLCODE:</b> </p>\r\n            <pre>\r\n\t\t\t\t&lt;!DOCTYPE html>\r\n\t\t\t\t&lt;style>\r\n\t\t\t\t.grandpa &#123;\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\theight: 100%;\r\n\t\t\t\t\tleft: 0;\r\n\t\t\t\t\ttop: 0;\r\n\t\t\t\t\toverflow: hidden;\r\n\t\t\t\t\tposition: fixed;\r\n\t\t\t\t\tbackground-color: #b2d6d1;\r\n\t\t\t\t&#125; \r\n\t\t\t\t\r\n\t\t\t\t.papa &#123;\r\n\t\t\t\t\tleft: 5%;\r\n\t\t\t\t\ttop: 11%;\r\n\t\t\t\t\twidth: 90%;\r\n\t\t\t\t\theight: 100%;\r\n\t\t\t\t\tposition: fixed;\r\n\t\t\t\t\tbackground-color: #F0FFFF;\r\n\t\t\t\t&#125;\r\n\t\t\t\t\r\n\t\t\t\t.p0 &#123;\r\n\t\t\t\t\tmargin-top: 10px;\r\n\t\t\t\t\tmargin-left: 45%;\r\n\t\t\t\t\tfont-family: \"Brush Script MT\";\r\n\t\t\t\t\tfont-size: 40px;\r\n\t\t\t\t&#125;\r\n\t\t\t\t\r\n\t\t\t\t.p1 &#123;\r\n\t\t\t\t\tdisplay : flex;\r\n\t\t\t\t\tmargin-top: 30px;\r\n\t\t\t\t\tmargin-left: 35%;\r\n\t\t\t\t\tfont-family: \"Lucida Handwriting\";\r\n\t\t\t\t\t\r\n\t\t\t\t&#125;\r\n\t\t\t\t\r\n\t\t\t\ttd &#123;\r\n\t\t\t\t\theight: 50px;\r\n\t\t\t\t&#125;\r\n\t\t\t\t\r\n\t\t\t\t.left &#123;\r\n\t\t\t\t\ttext-align: right;\r\n\t\t\t\t\tfont-family: \"Papyrus\";\r\n\t\t\t\t\t\r\n\t\t\t\t&#125;\r\n\t\t\t\t\r\n\t\t\t\t.right &#123;\r\n\t\t\t\t\ttext-align: left;\r\n\t\t\t\t&#125;\r\n\t\t\t\t\r\n\t\t\t\ttable &#123;\r\n\t\t\t\t\tdisplay : flex;\r\n\t\t\t\t\r\n\t\t\t\t\twidth: 80%;\r\n\t\t\t\t\tmargin-left: 10%;\r\n\t\t\t\t&#125;\r\n\t\t\t\t&lt;/style>\r\n\t\t\t\t&lt;div class=\"grandpa\">\r\n\t\t\t\t\t&lt;p class=\"p0\">Survey Form&lt;/p>\r\n\t\t\t\t\t&lt;div class=\"papa\">\r\n\t\t\t\t\r\n\t\t\t\t\t\t&lt;p class=\"p1\">let us know how we can improve freeCodeCamp&lt;/p>\r\n\t\t\t\t\t\t&lt;table>\r\n\t\t\t\t\r\n\t\t\t\t\t\t\t&lt;tr>\r\n\t\t\t\t\t\t\t\t&lt;td class=\"left\">*NAME&lt;/td>\r\n\t\t\t\t\t\t\t\t&lt;td class=\"right\">&lt;input type=\"name\" id=\"w3review\"  placeholder=\"Enter your name\">&lt;/input>&lt;/td>\r\n\t\t\t\t\t\t\t&lt;/tr>\r\n\t\t\t\t\t\t\t&lt;tr>\r\n\t\t\t\t\t\t\t\t&lt;td class=\"left\">*Email&lt;/td>\r\n\t\t\t\t\t\t\t\t&lt;td class=\"right\">&lt;input type=\"name\" id=\"w3review\" placeholder=\"Enter your Email\">&lt;/input>&lt;/td>\r\n\t\t\t\t\r\n\t\t\t\t\t\t\t&lt;/tr>\r\n\t\t\t\t\t\t\t&lt;tr>\r\n\t\t\t\t\t\t\t\t&lt;td class=\"left\">*AGE &lt;/td>\r\n\t\t\t\t\t\t\t\t&lt;td class=\"right\">&lt;input type=\"number\" id=\"quantity\"\r\n\t\t\t\t\t\t\t\t\tname=\"quantity\" min=\"12\" max=\"100\"  placeholder=\"AGE\">&lt;/td>\r\n\t\t\t\t\t\t\t&lt;/tr>\r\n\t\t\t\t\t\t\t&lt;tr>\r\n\t\t\t\t\t\t\t\t&lt;td class=\"left\">Wich options best descripes your current role&lt;/td>\r\n\t\t\t\t\t\t\t\t&lt;td class=\"right\">&lt;select id=\"cars\" name=\"cars\">\r\n\t\t\t\t\t\t\t\t\t\t&lt;option value=\"volvo\">Student&lt;/option>\r\n\t\t\t\t\t\t\t\t\t\t&lt;option value=\"saab\">Mitarbeiter&lt;/option>&lt;/td>\r\n\t\t\t\t\t\t\t&lt;/tr>\r\n\t\t\t\t\t\t\t&lt;tr>\r\n\t\t\t\t\t\t\t\t&lt;td class=\"left\">How likely is that you would recommend\r\n\t\t\t\t\t\t\t\t\tfreeCodeCamp to a Friend&lt;/td>\r\n\t\t\t\t\t\t\t\t&lt;td class=\"right\">&lt;input type=\"radio\" id=\"html\"\r\n\t\t\t\t\t\t\t\t\tname=\"fav_language\" value=\"HTML\"> &lt;label for=\"html\">Defintely&lt;/label>&lt;br>\r\n\t\t\t\t\t\t\t\t\t&lt;input type=\"radio\" id=\"css\" name=\"fav_language\" value=\"CSS\">\r\n\t\t\t\t\t\t\t\t\t&lt;label for=\"css\">Mabye&lt;/label>&lt;br> &lt;input type=\"radio\"\r\n\t\t\t\t\t\t\t\t\tid=\"javascript\" name=\"fav_language\" value=\"JavaScript\"> &lt;label\r\n\t\t\t\t\t\t\t\t\tfor=\"javascript\">Not Sure&lt;/label>&lt;br> &lt;br>&lt;/td>\r\n\t\t\t\t\t\t\t&lt;/tr>\r\n\t\t\t\t\t\t\t&lt;tr>\r\n\t\t\t\t\t\t\t\t&lt;td class=\"left\">What do you like moste in FCC&lt;/td>\r\n\t\t\t\t\t\t\t\t&lt;td class=\"right\">&lt;select id=\"cars\" name=\"cars\">\r\n\t\t\t\t\t\t\t\t\t\t&lt;option value=\"volvo\">Select an Option&lt;/option>&lt;/td>\r\n\t\t\t\t\t\t\t&lt;/tr>\r\n\t\t\t\t\t\t\t&lt;tr>\r\n\t\t\t\t\t\t\t\t&lt;td class=\"left\">Things that Should be improved in the future\r\n\t\t\t\t\t\t\t\t\t(check all that apply)&lt;/td>\r\n\t\t\t\t\t\t\t\t&lt;td class=\"right\">&lt;input type=\"radio\" id=\"html\"\r\n\t\t\t\t\t\t\t\t\tname=\"fav_language\" value=\"HTML\"> &lt;label for=\"html\">Front-end\r\n\t\t\t\t\t\t\t\t\t\tProjects&lt;/label>&lt;br> &lt;input type=\"radio\" id=\"css\" name=\"fav_language\"\r\n\t\t\t\t\t\t\t\t\tvalue=\"CSS\"> &lt;label for=\"css\">Back-end Projects&lt;/label>&lt;br>\r\n\t\t\t\t\t\t\t\t\t&lt;input type=\"radio\" id=\"javascript\" name=\"fav_language\"\r\n\t\t\t\t\t\t\t\t\tvalue=\"JavaScript\"> &lt;label for=\"javascript\">Data\r\n\t\t\t\t\t\t\t\t\t\tVisualization &lt;/label>&lt;br> &lt;br>&lt;/td>\r\n\t\t\t\t\t\t\t&lt;/tr>\r\n\t\t\t\t\t\t&lt;/table>\r\n\t\t\t\t\t&lt;/div>\r\n\t\t\t\t&lt;/div>\r\n\t\t\t\t\r\n\t\t\t\t\t</pre>\r\n\r\n    </div>\r\n  </div>\r\n  <div class=\"rightpane\">\r\n    <p id=\"ausfuhren\"> QUELLCODE AUSFÜHRUNG</p>\r\n    <a class=\"execute\" href=\"assets/loesung 2.3.html\" target=\"_blank\">klicken SIE HIER BITTE !</a>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-Ex52',\n  templateUrl: './Ex52.component.html',\n  styleUrls: ['./Ex52.component.scss']\n})\nexport class Ex52Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"middlepane\">\n    <div id=\"aufgabe\">\n      <h1>5.2. Rednerliste mit Zeitmessung </h1>\n      <p><b>Implementieren Sie die interaktive Anwendung \"Rednerliste mit Zeitmessung\" selbstständig in JavaScript durch\n          Nutzung der<a href=\"https://www.w3schools.com/js/js_htmldom.asp\" target=\"_blank\"> DOM API</a> und der <a\n            href=\"https://www.w3schools.com/js/js_timing.asp\" target=\"_blank\">Timer-Funktionen</a>. Neue Redner sollen\n          auf Knopfdruck hinzugefügt werden können. Deren Uhr wird dann sofort automatisch gestartet und alle anderen\n          Uhren angehalten. Bei jedem Redner soll die individuelle, gemessene Redezeit sekundengenau angezeigt werden.\n          Für jeden Redner soll es einen eigenen Start-/Stopp-Button geben. Es soll immer nur eine Uhr laufen. Angezeigt\n          werden sollen die bisherigen Summenzeiten aller Redebeiträge der betreffenden Person. Suchen Sie eine\n          möglichst kurze und elegante Lösung. Achten Sie gleichzeitig auf gute Usability: z.B. wenn die Eingabe mit\n          einem Return beendet wird, soll der Button-Click nicht mehr erforderlich sein, usw.</b></p>\n      <img src=\"https://kaul.inf.h-brs.de/we/assets/img/Rednerliste.png\" style=\"max-width:600px;width:100%\">\n      <p>Geben Sie die komplette HTML-Seite exkl. JavaScript-Quelltext an. Schreiben Sie Ihren JavaScript-Quelltext in\n        eine separate Datei.</p>\n      <p><b>QUELLCODE:</b></p>\n\n      <pre>&lt;!DOCTYPE html>\n        &lt;html>&lt;head>\n                &lt;script type=\"text/javascript\" src=\"Übung5_2rednerListe.js\">&lt;/script>\n            &lt;/head>\n            &lt;body>\n                &lt;h1>Redner Liste&lt;/h1>\n                &lt;table id=\"input\">\n                            &lt;tr>\n                        &lt;td>NeueRedner:&lt;/td>\n                        &lt;td>&lt;input type=\"text\" id=\"inputValue\">&lt;/td>\n                        &lt;td>&lt;button id=\"newButtuon\">add&lt;/button>&lt;/td>\n                        &lt;/tr>\n                &lt;/table>\n        \n                &lt;ul id=\"Rednerliste\">&lt;/ul>\n            \n        \n        &lt;/body>&lt;/html>\n            </pre>\n\n\n      <p>Fügen Sie Ihren JavaScript-Quelltext aus der separaten Datei in das folgende Textarea ein:</p>\n\n      <pre>let aktuTime , aktuIntervl , aktuButton;\n\n        window.onload = function () &#123;\n                const list = document.getElementById(\"Rednerliste\");\n                const input = document.getElementById(\"inputValue\");\n                const button = document.getElementById(\"newButtuon\");\n        \n            if ( input || list  ||button) &#123;\n                button.addEventListener(\"click\", (event) => &#123;const name = input.value;\n                    if (name != \"\") &#123;\n                            const table = document.createElement(\"table\");\n                            const redner = document.createElement(\"li\");\n                            const tr = document.createElement(\"tr\");\n                            const timeCreat = document.createElement(\"td\");\n                            const buttonCreat = document.createElement(\"td\");\n                            const nameCreat = document.createElement(\"td\");\n                            const newButton = document.createElement(\"button\");\n        \n                            tr.appendChild(nameCreat);\n                            tr.appendChild(timeCreat);\n                            tr.appendChild(buttonCreat);\n                            buttonCreat.appendChild(newButton);\n                            redner.appendChild(table);\n                            table.appendChild(tr);\n                            newButton.innerText = \"Stopp\";\n                            timeCreat.innerText = \"00:00:00\";\n                            nameCreat.innerText = name;\n                            let intervl = setInterval(Timer(timeCreat), 900);\n                            newButton.onclick = stopTime(intervl ,newButton, Timer(timeCreat));\n                            stopAll(Timer(timeCreat), newButton, intervl);\n                            list.appendChild(redner);\n                    &#125; \n                &#125;);\n            &#125; \n        &#125;;\n        \n        function Timer(time) &#123;\n            let h = 0; let m = 0; let s = 0;\n            function begin() &#123;\n                if (s == 59) &#123; s = 0; newMinute();&#125;\n                else &#123;++s; &#125;\n                \n                htmlPut(); &#125;\n            function newMinute() &#123;\n                if (m == 59) &#123;\n                    m = 0;\n                    ++h;\n                &#125; else &#123;\n                    ++m;&#125;\n                    &#125;\n        \n                function htmlPut() &#123;\n                const timeString = numUmwandlung(h) + \":\" + numUmwandlung(m) + \":\" + numUmwandlung(s);\n                time.innerText = timeString;&#125;\n        \n                function numUmwandlung(num) &#123;\n                return (\"0\" + num).slice(-2); &#125;\n        \n                function getButton() &#123;\n                return button;&#125;\n        \n            return begin;\n        &#125;\n        \n        function stopTime(intervl, button, timer) &#123;\n            return function () &#123;\n                clearInterval(intervl);\n                button.innerText = \"Start\";\n                button.onclick = restartTimer(intervl, button, timer);&#125;;\n        \n        &#125;\n        \n        function restartTimer(intervl, button, timer) &#123;\n            return function () &#123;\n                intervl = setInterval(timer, 900);\n                stopAll( timer, button,intervl);\n                button.innerText = \"Stopp\";\n                button.onclick = stopTime(intervl, button, timer);&#125;;\n        &#125;\n        \n        function stopAll( timer, button,intervl) &#123;\n            if ( aktuTime != null && aktuButton != null && aktuIntervl != null ) &#123;\n                stopTime(aktuIntervl, aktuButton, aktuTime)();\n            &#125; \n            aktuButton = button; aktuIntervl = intervl; aktuTime = timer;\n        &#125;\n        \n            </pre>\n    </div>\n  </div>\n  <div class=\"rightpane\">\n    <p id=\"ausfuhren\"> QUELLCODE AUSFÜHREN</p>\n    <a class=\"execute\" href=\"assets/loesung5.2.html\" target=\"_blank\">klicken SIE HIER BITTE !</a>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-Ex61',\n  templateUrl: './Ex61.component.html',\n  styleUrls: ['./Ex61.component.scss']\n})\nexport class Ex61Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"middlepane\">\n    <div id=\"aufgabe\">\n      <h1>6.1. Klammerpaare</h1>\n\n      <p><b>Schreiben Sie eine Webseite, in die man eine Zeichenkette mit beliebigen Buchstaben, Zahlen und\n          Sonderzeichen\n          eingeben kann, die beliebig geschachtelte Klammern <code>[...], (...)</code> und enthält, so dass sofort\n          geprüft\n          wird, ob\n          alle Klammerpaare\n          korrekt geschachtelt sind. Das Eingabefeld der Zeichenkette soll rot gefärbt werden, wenn es ein Klammerpaar\n          gibt,\n          das falsch geschachtelt ist. </b></p>\n\n      <p>Geben Sie die HTML-Seite inkl. ES6-Code inkl. Tests hier ein. Verwenden Sie für Ihre Tests die Funktion <a\n          href=\"https://developer.mozilla.org/de/docs/Web/API/Console/assert\" target=\"_blank\"> console.assert</a>. </p>\n\n      <p>QUELLCODE:</p>\n      <pre>&lt;!DOCTYPE html>\n        &lt;html>\n        &lt;head>\n        \n        &lt;/head>\n        &lt;body>\n        \n        \n        &lt;h1>Write Your text im Field and see if you have forgot to Close any nested brackets&lt;/h1>\n        \n        &lt;textarea id=\"textarea\" rows=\"4\" cols=\"50\" placeholder=\"write your Text and please use some nested brackets\" >\n        &lt;/textarea>\n        \n          &lt;button class=\"button\" onclick = check() >check Text&lt;/button>\n        &lt;script>\n        const zeichen = &#123;\n            openklamma: 0,\n            openEckigeKlammer: 0,\n            openGeschweifteKlammer: 0,\n        \n        &#125;;\n        \n        \n        function check() &#123;\n          const text= document.getElementById(\"textarea\").value;\n            for (let i of text) &#123;\n        \n                if (i == \"(\") &#123;\n                    zeichen.openklamma++;\n                &#125;\n                if (i == \"&#123;\") &#123;\n                    zeichen.openGeschweifteKlammer++;\n                &#125;\n                if (i == \"[\") &#123;\n        \n                    zeichen.openEckigeKlammer++;\n                &#125;\n        \n                if (i == \")\") &#123;\n                    zeichen.openklamma--;\n                &#125;\n                if (i == \"&#125;\") &#123;\n        \n                    zeichen.openGeschweifteKlammer--;\n                &#125;\n                if (i == \"]\") &#123;\n                    zeichen.openEckigeKlammer--;\n                &#125;\n        \n            &#125;\n        \n            var s = (zeichen.openklamma + zeichen.openGeschweifteKlammer + zeichen.openEckigeKlammer) == 0;\n        \n            console.assert(s, 'the Text IS NOT ACCEPTED');\n        \n            if (s == false) &#123;\n                document.getElementById(\"textarea\").style=\"background-color:red;\";\n            &#125;\n        \n        &#125;\n         \n         \n        \n        &lt;/script>\n        \n        &lt;/body>\n        &lt;/html>\n        \n          </pre>\n\n    </div>\n  </div>\n  <div class=\"rightpane\">\n    <p id=\"ausfuhren\"> QUELLCODE AUSFÜHREN</p>\n    <a class=\"execute\" href=\"assets/loesung 6.1.html\" target=\"_blank\">klicken SIE HIER BITTE !</a>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-solution',\r\n  templateUrl: './solution.component.html',\r\n  styleUrls: ['./solution.component.scss']\r\n})\r\nexport class SolutionComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<p>\r\n  tasks works!\r\n</p>\r\n<p>\r\n  tasks works!\r\n</p>\r\n<p>\r\n  tasks works!\r\n</p>\r\n<p>\r\n  tasks works!\r\n</p>\r\n<p>\r\n  tasks works!\r\n</p>\r\n<p>\r\n  tasks works!\r\n</p>\r\n<p>\r\n  tasks works!\r\n</p>\r\n<p>\r\n  tasks works!\r\n</p>\r\n<p>\r\n  tasks works!\r\n</p>\r\n<p>\r\n  tasks works!\r\n</p>\r\n<p>\r\n  tasks works!\r\n</p>\r\n<p>\r\n  tasks works!\r\n</p>\r\n<p>\r\n  tasks works!\r\n</p>\r\n<p>\r\n  tasks works!\r\n</p>\r\n<p>\r\n  tasks works!\r\n</p>\r\n<p>\r\n  tasks works!\r\n</p>\r\n<p>\r\n  tasks works!\r\n</p>\r\n<p>\r\n  tasks works!\r\n</p>\r\n<p>\r\n  tasks works!\r\n</p>\r\n<p>\r\n  tasks works!\r\n</p>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.scss']\n})\nexport class NavBarComponent implements OnInit {\n\n  @Input() sheet1 : boolean   ;\n  @Input() sheet2 : boolean  ;\n  @Input() sheet3 : boolean  ;\n  @Input() sheet4 : boolean  ;\n  @Input() sheet5 : boolean  ;\n  @Input() sheet6 : boolean  ;\n  @Input() sheet7 : boolean  ;\n  @Input() sheet8 : boolean  ;\n  @Input() sheet9 : boolean  ;\n  @Input() sheet10 : boolean  ;\n  @Input() sheet11 : boolean  ;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n\n\n}\n","<span class=\"aufgabe\">AUFGABEN </span>\n<div *ngIf=\"sheet1\" class=\"buttons\">\n  <ul>\n    <li><button routerLink=\"/exercice/sheet1Ex1\">1.1 WWW</button></li>\n    <li><button routerLink=\"/exercice/Ex12\">1.2 HTTP</button></li>\n    <li><button routerLink=\"/exercice/Ex13\">1.3 HTML-Literaturon</button></li>\n    <li><button routerLink=\"/exercice/Ex14\">1.4 HTML Wireframe</button></li>\n  </ul>\n</div>\n\n<div *ngIf=\"sheet2\" class=\"buttons\">\n  <ul>\n\n    <li> <button routerLink=\"/exercice/Ex21\">2.1 CSS Selektoren und CSS Farben</button></li>\n    <li> <button routerLink=\"/exercice/Ex22\">2.2 CSS Positionierung</button></li>\n    <li> <button routerLink=\"/exercice/Ex23\">2.3 Wireframe with HTML and CSS</button></li>\n  </ul>\n\n</div>\n\n<div *ngIf=\"sheet3\" class=\"buttons\">\n  <ul>\n    <li> <button routerLink=\"/exercice/Ex31\"> 3.1 Responsiv mit Flexbox Desktop-First</button></li>\n    <li> <button routerLink=\"/exercice/Ex32\"> 3.2 Responsiv mit Grid Mobile-First</button></li>\n    <li> <button routerLink=\"/exercice/Ex33\">3.3 Responsiv mit Grid</button></li>\n  </ul>\n</div>\n\n<div *ngIf=\"sheet4\" class=\"buttons\">\n  <ul>\n    <li> <button routerLink=\"/exercice/Ex41\">4.1 Funktionen</button></li>\n    <li> <button routerLink=\"/exercice/Ex42\">4.2 Objekte</button></li>\n    <li> <button routerLink=\"/exercice/Ex43\">4.3 Fibonacci</button></li>\n    <li> <button routerLink=\"/exercice/Ex44\">4.4 Topsort</button></li>\n  </ul>\n</div>\n\n<div *ngIf=\"sheet5\" class=\"buttons\">\n  <ul>\n    <li> <button routerLink=\"/exercice/Ex51\"> 5.1 Performanzmessungen von DOM-Operationen</button></li>\n    <li> <button routerLink=\"/exercice/Ex52\">5.2 Rednerliste mit Zeitmessung</button></li>\n    <li> <button routerLink=\"/exercice/Ex53\">5.3 topSort</button></li>\n  </ul>\n</div>\n\n<div *ngIf=\"sheet6\" class=\"buttons\">\n  <ul>\n    <li> <button routerLink=\"/exercice/Ex61\">6.1 KlammerPaar</button></li>\n    <li> <button routerLink=\"/exercice/Ex62\">6.2 Topologische Iterierbarkeit</button></li>\n    <li> <button routerLink=\"/exercice/Ex63\">6.3. Topologischer Generator</button></li>\n    <li> <button routerLink=\"/exercice/Ex64\">6.4. Proxy</button></li>\n    <li> <button routerLink=\"/exercice/Ex65\">6.5. DeepCopy</button></li>\n  </ul>\n</div>\n\n<div *ngIf=\"sheet7\" class=\"buttons\">\n  <ul>\n    <li> <button routerLink=\"/exercice/Ex71\">7.1 Funktionen in JavaScript</button></li>\n    <li> <button routerLink=\"/exercice/Ex72\">7.2 Textanalyse mit filter-map-reduce</button></li>\n  </ul>\n</div>\n\n<div *ngIf=\"sheet8\" class=\"buttons\">\n  <ul>\n    <li> <button routerLink=\"/exercice/Ex81\">8.1 Promises</button></li>\n    <li><button routerLink=\"/exercice/Ex82\">8.2 Fetch mit async / await</button></li>\n  </ul>\n</div>\n\n<div *ngIf=\"sheet9\" class=\"buttons\">\n  <ul>\n    <li> <button routerLink=\"/exercice/Ex91\">9.1 SVG Grafik von Hand erstellen</button></li>\n    <li> <button routerLink=\"/exercice/Ex92\">\n        9.2 Statistik-Balkendiagramm in SVG\n      </button></li>\n  </ul>\n</div>\n\n<div *ngIf=\"sheet10\" class=\"buttons\">\n  <ul>\n    <li> <button routerLink=\"/exercice/Ex101\">\n        10.1 Static classes in TypeScript\n      </button></li>\n    <li> <button routerLink=\"/exercice/Ex102\">\n        10.2 Fehler finden mit TypeScript\n      </button></li>\n    <li> <button routerLink=\"/exercice/Ex103\">10.3 TypeScript auf Deno</button></li>\n  </ul>\n</div>\n\n<div *ngIf=\"sheet11\" class=\"buttons\">\n  <ul>\n    <li><button routerLink=\"/exercice/Ex111\">11.1 Registrierung mit PHP</button></li>\n    <li> <button routerLink=\"/exercice/Ex112\">11.2 Login mit PHP</button></li>\n    <li> <button routerLink=\"/exercice/Ex113\">11.3 WWW-Navigator </button></li>\n\n  </ul>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-Ex81',\n  templateUrl: './Ex81.component.html',\n  styleUrls: ['./Ex81.component.scss']\n})\nexport class Ex81Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div id=\"aufgabe\">\n  <h1>8.1 Promises</h1>\n  <p><b>Erstellen Sie auf Ihrem Server www2.inf.h-brs.de (oder localhost) zwei Text-Dateien A.txt und B.txt mit ungefähr\n      gleich\n      vielen Zeilen. Laden Sie mit der fetch-API parallel beide Text-Dateien vom Server. Geben Sie auf einer Webseite\n      den Inhalt beider\n      Dateien zeilenweise aus, wobei der Anfang der Zeile aus A.txt und das Ende aus B.txt stammen soll. Die beiden\n      Dateien sollen also\n      zeilenweise konkateniert werden. Erzielen Sie max. Geschwindigkeit durch maximale Parallelität. Achten Sie\n      gleichzeitig auf Korrektheit.\n      Verwenden Sie dabei ausschließlich die Promise API ohne async / await.</b></p>\n  <p>Geben Sie die komplette HTML-Seite für die Promise-Lösung inkl. JavaScript-Quelltext an: </p>\n  <p>QUELLCODE:</p>\n\n  <pre>&lt;!DOCTYPE html>\n    &lt;html>\n    \n    &lt;head>\n    \n        &lt;script>\n            var texta = fetch('A.txt');\n            var textb = fetch('B.txt');\n    \n            Promise.all([\n                arrayA.then(x => x.text()).split(\"'\\r\\n\"),\n                ArrayB.then(x => x.text()).split(\"'\\r\\n\")\n            ]).then(() => &#123;\n                var maxlen = (arrayA.length >= arrayB.length) ? maxlen = arrayA.length : maxlen = arrayB.length;\n    \n                for (var i = 0; i &lt; maxlen; i++) &#123;\n                    document.getElementById(\"feld\").textContent += arrayA[i] + arrayB[i];\n                &#125;\n            &#125;);\n        &lt;/script>\n    \n    &lt;/head>\n    \n    &lt;body>\n        &lt;div>\n            &lt;h1>8.1. Promises&lt;/h1>\n            &lt;div id=\"feld\">&lt;/div>\n    \n        &lt;/div>\n    \n    &lt;/body>\n    \n    &lt;/html>\n    \n        </pre>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-Ex62',\n  templateUrl: './Ex62.component.html',\n  styleUrls: ['./Ex62.component.scss']\n})\nexport class Ex62Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"container\">\r\n  <div class=\"middlepane\">\r\n    <div id=\"aufgabe\">\r\n      <h1>6.2. Topologische Iterierbarkeit</h1>\r\n      <p><b>Schreiben Sie eine ES6-Klasse<code style=\"color:#ff0000\"> Vorrang</code> für Vorrangrelationen, z.B.<code\r\n            style=\"color:#ff0000\"> new Vorrang([ [\"schlafen\", \"studieren\"], [\"essen\", \"studieren\"], [\"studieren\",\r\n            \"prüfen\"] ])</code>\r\n          . Wählen Sie eine Implementierung, die universell gültig,\r\n          also nicht nur für dieses Beispiel gilt. (Überlegen Sie sich, über welche Properties und Methoden eine solche\r\n          Klasse\r\n          verfügen sollte und wie TopSort hier hineinspielt. Topologische Iterierbarkeit und topologischer Generator\r\n          sind\r\n          jedoch\r\n          Gegenstand der nächsten Übungen weiter unten auf diesem Übungsblatt und sollten für die folgenden Aufgaben\r\n          aufgespart werden.)\r\n          <br><br>\r\n          Stellen Sie bei Ihrer Klasse die topologische Iterierbarkeit her (zunächst über das Iterationsprotokoll, ohne\r\n          Generator, ohne yield).\r\n          <br><br>\r\n          Zum Beispiel soll dadurch folgende for ... of loop möglich werden, mit der die Elemente in topologischer\r\n          Sortierung durchlaufen werden: </b></p>\r\n      <p> Auf der Console wird dadurch ausgegeben: </p>\r\n\r\n      <div class=\"box code\"><span> schlafen</span><br><span> essen</span><br><span> studieren</span><br><span>\r\n          prüfen</span><br></div>\r\n      <p>Wählen Sie eine Implementierung, die universell gültig, also nicht nur für dieses Beispiel gilt.\r\n        Eine topologische Sortierung im Konstruktor vorzuberechnen, wäre eine triviale Lösung. Versuchen Sie es\r\n        stattdessen \"lazy computation\",\r\n        d.h. erst beim Aufruf von <code style=\"color:#ff0000\">next()</code> wird die erforderliche Berechnung\r\n        durchgeführt. Nebenbedingung ist minimaler Aufwand, d.h. bei jedem <code style=\"color:#ff0000\">next()</code>\r\n        erneut alles zu sortieren,\r\n        wird nicht als Lösung akzeptiert.\r\n        Verwenden Sie so weit wie möglich High-Level-Methoden wie <a\r\n          href=\"https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\"\r\n          target=\"_blank\"> Object.keys</a> und High-Level-Datenstrukturen wie<a\r\n          href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map\" target=\"_blank\">\r\n          Map</a> und <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set\"\r\n          target=\"_blank\">Set </a>und deren Methoden,\r\n        anstatt mühsam von Hand zu iterieren und zu zählen. </p>\r\n      <p>Geben Sie die HTML-Seite inkl. ES6-Code inkl. Tests hier ein. Verwenden Sie für Ihre Tests die Funktion <a\r\n          href=\"https://developer.mozilla.org/de/docs/Web/API/Console/assert\" target=\"_blank\">console.assert</a>. </p>\r\n      <p><b>QUELLCODE:</b></p>\r\n      <pre>function topsort(array) &#123;\r\n\r\n\r\n        var Knoten = [];\r\n        var pack = [];\r\n        var gesehen = [];\r\n    \r\n        for (var k = 0; k &lt; array.length; k++) &#123;\r\n            if (Knoten.indexOf(array[k][0]) &lt; 0) Knoten.push(array[k][0]);\r\n            if (Knoten.indexOf(array[k][1]) &lt; 0) Knoten.push(array[k][1]);\r\n        &#125;\r\n    \r\n        Knoten.forEach(function (knote) &#123;\r\n            if (gesehen.indexOf(knote) &lt; 0) &#123;\r\n                sort(knote);\r\n            &#125;\r\n        &#125;);\r\n    \r\n        function sort(knote) &#123;\r\n            gesehen.push(knote);\r\n            array.forEach(function (Kante) &#123;\r\n                if (gesehen.indexOf(Kante[1]) &lt; 0 && Kante[0] == knote) &#123;\r\n                    sort(Kante[1]);\r\n                &#125;\r\n            &#125;);\r\n            pack.push(knote);\r\n        &#125;\r\n        return pack.reverse();\r\n    &#125;\r\n    \r\n    class Vorrang &#123;\r\n        [Symbol.iterator]() &#123;\r\n            return this.array.values()\r\n        &#125;\r\n        constructor(array) &#123;\r\n            this.array = topsort(array);\r\n        &#125;\r\n    \r\n    \r\n    &#125;\r\n    \r\n    \r\n    function check() &#123;\r\n        try &#123;\r\n    \r\n            var text = \"schlafen,studieren,essen,studieren,studieren,prüfen\";\r\n            console.log(text);\r\n    \r\n            var array = text.split(\",\").map(String);\r\n            if ((array.length % 2) != 0) &#123;\r\n                throw new Error(' Geben Sie bitte eine Komplette Vorrangrelationen');\r\n            &#125;\r\n    \r\n            var gfg = new Array(array.length / 2);\r\n    \r\n    \r\n            // Loop to create 2D array using 1D array\r\n            for (var i = 0; i &lt; gfg.length; i++) &#123;\r\n                gfg[i] = new Array(2);\r\n            &#125;\r\n    \r\n            var h = 0;\r\n    \r\n            // Loop to initialize 2D array elements.\r\n            for (let i = 0; i &lt; array.length / 2; i++) &#123;\r\n                for (let j = 0; j &lt; 2; j++) &#123;\r\n                    gfg[i][j] = array[h++];\r\n                &#125;\r\n            &#125;\r\n    \r\n            const studentenLeben = new Vorrang(gfg);\r\n    \r\n            var final = [];\r\n            for (const next of studentenLeben) &#123;\r\n                final.push(next);\r\n            &#125;\r\n    \r\n            console.log(final);\r\n    \r\n        &#125; catch (err) &#123;\r\n    \r\n            console.log(err.message);\r\n        &#125;\r\n    &#125;\r\n    //RUN\r\n    check()\r\n    \r\n    //TEST\r\n    function test() &#123;\r\n        const array = new Vorrang([\r\n            [\"schlafen\", \"studieren\"],\r\n            [\"essen\", \"studieren\"],\r\n            [\"studieren\", \"prüfen\"]\r\n        ]);\r\n        var arrayfinal = [];\r\n        for (const next of array) &#123;\r\n            arrayfinal.push(next);\r\n        &#125;\r\n        var ausgabe= [\"schlafen\", \"essen\", \"studieren\", \"prüfen\"];\r\n        for (let i = 0; i &lt; arrayfinal.length; i++) &#123;\r\n    \r\n            console.assert(ausgabe[i] === arrayfinal[i], `diese beide Werte $&#123;ausgabe[i]&#125; und $&#123;arrayfinal[i]&#125; sind nicht gleich`);\r\n        &#125;\r\n    &#125;\r\n    test()\r\n        </pre>\r\n\r\n      <p>Betten Sie Ihren ECMAScript-Code in eine Webseite ein, so dass man die Vorrangrelation dort eingeben kann.\r\n        Geben\r\n        Sie hier die HTML-Seite an:</p>\r\n      <p><b>QUELLCODE: </b></p>\r\n\r\n      <pre>&lt;!DOCTYPE html>\r\n        &lt;html>\r\n        &lt;head>\r\n        \r\n        &lt;/head>\r\n        &lt;body>\r\n        \r\n        \r\n        &lt;h1>Geben Sie Bitte eine Vorrangrelationen in Dieser Schreibweise  :&lt;br>\r\n                   schlafen,studieren,essen,studieren,studieren,prüfen&lt;/h1>\r\n        &lt;br>\r\n        \r\n        \r\n        &lt;textarea id=\"textarea\" rows=\"4\" cols=\"50\" placeholder=\"write your Text and please use some nested brackets\" >\r\n        &lt;/textarea>\r\n        \r\n          &lt;button class=\"button\" onclick = check() >check Text&lt;/button>\r\n        \r\n        &lt;br>\r\n        \r\n        &lt;textarea id=\"textarea2\" rows=\"4\" cols=\"50\" placeholder=\"your result\" >\r\n        &lt;/textarea>\r\n         &lt;script>\r\n        \r\n        function topsort(array) &#123;\r\n        \r\n        \r\n            var Knoten = [];\r\n            var pack = [];\r\n            var gesehen = [];\r\n        \r\n            for (var k = 0; k &lt; array.length; k++) &#123;\r\n                if (Knoten.indexOf(array[k][0]) &lt; 0) Knoten.push(array[k][0]);\r\n                if (Knoten.indexOf(array[k][1]) &lt; 0) Knoten.push(array[k][1]);\r\n            &#125;\r\n        \r\n            Knoten.forEach(function (knote) &#123;\r\n                if (gesehen.indexOf(knote) &lt; 0) &#123;\r\n                    sort(knote);\r\n                &#125;\r\n            &#125;);\r\n        \r\n            function sort(knote) &#123;\r\n                gesehen.push(knote);\r\n                array.forEach(function (Kante) &#123;\r\n                    if (gesehen.indexOf(Kante[1]) &lt; 0 && Kante[0] == knote) &#123;\r\n                        sort(Kante[1]);\r\n                    &#125;\r\n                &#125;);\r\n                pack.push(knote);\r\n            &#125;\r\n            return pack.reverse();\r\n        &#125;\r\n        \r\n        class Vorrang &#123;\r\n            [Symbol.iterator]() &#123;\r\n                return this.array.values()\r\n            &#125;\r\n            constructor(array) &#123;\r\n                this.array = topsort(array);\r\n            &#125;\r\n        \r\n        \r\n        &#125;\r\n        \r\n        \r\n        function check() &#123;\r\n            try &#123;\r\n        \r\n                var text= document.getElementById(\"textarea\").value;\r\n                console.log(text);\r\n        \r\n                var array = text.split(\",\").map(String);\r\n                if ((array.length % 2) != 0) &#123;\r\n                    throw new Error(' Geben Sie bitte eine Komplette Vorrangrelationen');\r\n                &#125;\r\n        \r\n                var gfg = new Array(array.length / 2);\r\n        \r\n        \r\n                // Loop to create 2D array using 1D array\r\n                for (var i = 0; i &lt; gfg.length; i++) &#123;\r\n                    gfg[i] = new Array(2);\r\n                &#125;\r\n        \r\n                var h = 0;\r\n        \r\n                // Loop to initialize 2D array elements.\r\n                for (var i = 0; i &lt; array.length / 2; i++) &#123;\r\n                    for (var j = 0; j &lt; 2; j++) &#123;\r\n                        gfg[i][j] = array[h++];\r\n                    &#125;\r\n                &#125;\r\n        \r\n                const studentenLeben = new Vorrang(gfg);\r\n        \r\n                var final = [];\r\n                for (const next of studentenLeben) &#123;\r\n                    final.push(next);\r\n                &#125;\r\n                \r\n                //test\r\n                test();\r\n        \r\n                document.getElementById(\"textarea2\").value=final;\r\n        \r\n            &#125; catch (err) &#123;\r\n        \r\n                document.getElementById(\"textarea2\").value=err.message;\r\n            &#125;\r\n        &#125;\r\n        \r\n        //test\r\n        function test() &#123;\r\n            const array = new Vorrang([\r\n                [\"schlafen\", \"studieren\"],\r\n                [\"essen\", \"studieren\"],\r\n                [\"studieren\", \"prüfen\"]\r\n            ]);\r\n            var arrayfinal = [];\r\n            for (const next of array) &#123;\r\n                arrayfinal.push(next);\r\n            &#125;\r\n           var ausgabe = [\"schlafen\", \"essen\", \"studieren\", \"prüfen\"];\r\n            for (let i = 0; i &lt; arrayfinal.length; i++) &#123;\r\n        \r\n                console.assert(ausgabe[i] === arrayfinal[i], `diese beide Werte $&#123;ausgabe[i]&#125; und $&#123;arrayfinal[i]&#125; sind nicht gleich`);\r\n            &#125;\r\n        &#125;\r\n        \r\n        \r\n        &lt;/script>\r\n        \r\n        &lt;/body>\r\n        &lt;/html>\r\n        </pre>\r\n    </div>\r\n  </div>\r\n  <div class=\"rightpane\">\r\n    <p id=\"ausfuhren\"> QUELLCODE AUSFÜHREN</p>\r\n\r\n    <a class=\"execute\" href=\"assets/loesung 6.2.2.html\" target=\"_blank\">klicken SIE HIER BITTE !</a>\r\n\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-Ex33',\n  templateUrl: './Ex33.component.html',\n  styleUrls: ['./Ex33.component.scss']\n})\nexport class Ex33Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"middlepane\">\n    <div id=\"aufgabe\">\n      <h1>Aufgabe 3.3. Responsiv mit Grid</h1>\n      <p><b>Implementieren Sie folgende Landing Page responsiv mit Grid Layout. Vermeiden Sie außerdem das Erscheinen\n          von Scrollbars so weit wie möglich. </b></p>\n      <p>Implementieren Sie dann das gleiche responsive Webdesign wie in Aufgabe 3.1 allerdings mit Grid und der\n        Mobile-First-Strategie! Vermeiden Sie diesmal außerdem das Erscheinen von Scrollbars. </p>\n      <img src=\"https://kaul.inf.h-brs.de/we/assets/img/landing.png\" style=\"max-width:600px;width:100%\">\n\n      <p><b>QUELLCODE:</b> </p>\n      <pre>&lt;!DOCTYPE html>\n        &lt;html lang=\"en\">\n        &lt;head>\n        &lt;meta charset=\"UTF-8\">\n        &lt;/head>\n        &lt;style>\n        * &#123;\n          padding: 0;\n          margin: 0;\n          box-sizing: border-box;\n           height:100px;\n          \n        &#125;\n        \n        body &#123;\n          display: grid;\n          grid-template: \"a\" \"b\" \"c\" \"d\";\n          min-height: 100vh;\n        &#125;\n        \n        header nav ul &#123;\n          background-color: #414141;\n          grid-area: a;\n          padding: 30px;\n          display: flex;\n          justify-content: center;\n          gap: 90px;\n          list-style: none;\n          \n        &#125;\n        \n        a &#123;\n          text-decoration: none;\n          color: white;\n          font-size: 20px;\n        &#125;\n        \n        h1 &#123;\n          grid-area: b;\n          text-align: center;\n          background-color: #d9cccc;\n          padding: 30px;\n        &#125;\n        .content &#123;\n          grid-area: c;\n          display: flex;\n          justify-content: center;\n          gap: 120px;\n          background-color: #d9cccc;\n          padding: 15px;\n             height:600px;\n          \n        &#125;\n        \n        .content img &#123;\n            height: 90%;\n             border: black 1px solid;\n          border-radius: 20px;\n            \n        &#125;\n        \n        .content .paragraph &#123;\n            text-align: center;\n            padding-top: 100px;\n        &#125;\n        \n        footer &#123;\n            grid-area: d;\n            background-color: #010224;\n            color: white;\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            align-items: center;\n            padding: 60px;\n            gap: 20px;\n              font-size: 20px;\n        &#125;\n        \n        button &#123;\n            background-color: orange;\n            width: 300px;\n           height:40px;\n          border-radius: 8px;\n           \n            \n        &#125;\n        \n        &lt;/style>\n        \n        &lt;body>\n          &lt;header>\n            &lt;nav>\n              &lt;ul>\n                &lt;li>&lt;a href=\"#\">The book series&lt;/a>&lt;/li>\n                &lt;li>&lt;a href=\"#\">Testemonials&lt;/a>&lt;/li>\n                &lt;li>&lt;a href=\"#\">The Author&lt;/a>&lt;/li>\n                &lt;li>&lt;a href=\"#\">Free resources&lt;/a>&lt;/li>\n              &lt;/ul>\n            &lt;/nav>\n          &lt;/header>\n        \n          &lt;h1 class=\"title\">You Dont know JavaScript&lt;/h1>\n        \n          &lt;div class=\"content\">\n            &lt;img src=\"https://kaul.inf.h-brs.de/we/assets/img/landing-img.png\"\n              alt=\"img\" />\n            &lt;div class=\"paragraph\">\n              Dont just drift through JavaScript &lt;br> &lt;br> &lt;br>\n              Understand how JavaScript works &lt;br> &lt;br> &lt;br> Start\n              your journey through the bumpy side of JavaScript &lt;br> &lt;br>\n              &lt;br>\n              &lt;button>ORDER YOUR COPY NOW&lt;/button>\n            &lt;/div>\n          &lt;/div>\n        \n        \n        \n          &lt;footer>\n            &lt;p>The first ebook in the book series is absolutely free.&lt;/p>\n            &lt;button>FIND OUT MORE ABOUT THIS OFFER&lt;/button>\n          &lt;/footer>\n        &lt;/body>\n        &lt;/html>\n          </pre>\n    </div>\n  </div>\n  <div class=\"rightpane\">\n    <p id=\"ausfuhren\"> QUELLCODE AUSFÜHRUNG</p>\n    <div class=\"Seite_html\">\n\n      <body>\n        <header style=\"background: #414141;\">\n          <nav>\n            <ul>\n              <li><a href=\"#\">The book series</a></li>\n              <li><a href=\"#\">Testemonials</a></li>\n              <li><a href=\"#\">The Author</a></li>\n              <li><a href=\"#\">Free resources</a></li>\n            </ul>\n          </nav>\n        </header>\n\n        <h1 class=\"title2\">You Dont know JavaScript</h1>\n        <div class=\"content\">\n\n          <img src=\"https://kaul.inf.h-brs.de/we/assets/img/landing-img.png\" style=\"max-width:400px;width:100%\"\n            alt=\"img\">\n          <div class=\"paragraph\">\n            Dont just drift through JavaScript <br> <br> <br>\n            Understand how JavaScript works <br> <br> <br> Start\n            your journey through the bumpy side of JavaScript <br> <br>\n            <br>\n            <button>ORDER YOUR COPY NOW</button>\n          </div>\n        </div>\n        <footer>\n          <p>The first ebook in the book series is absolutely free.</p>\n          <button>FIND OUT MORE ABOUT THIS OFFER</button>\n        </footer>\n      </body>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-Ex22',\n  templateUrl: './Ex22.component.html',\n  styleUrls: ['./Ex22.component.scss']\n})\nexport class Ex22Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"middlepane\">\n\n    <div id=\"aufgabe\">\n      <h1 id=\"ub\">Aufgabe 2.2. CSS Positionierung</h1>\n      <p><b>Schauen Sie sich folgendes <a href=\"https://www.youtube.com/watch?v=PE3POxjDspo\" target=\"_blank\"> Video</a>\n          an\n          und bauen Sie das dynamische Verhalten exakt nach (nur mit HTML und CSS, ohne JavaScript): </b></p>\n      <img\n        src=\"https://raw.githubusercontent.com/omarguella/-Web-Engineering/main/Exercice for the Web Seite(Aufgabenstellung %2BLosungen)/2. CSS 1. Teil/css Pos.jpg\"\n        class=\"img\" style=\"max-width:800px;width:100%\">\n      <p><b>QUELLCODE:</b>\n        <pre> &lt;!DOCTYPE html>\n          &lt;html>\n          &lt;head>\n          &lt;style>\n          h1,h2,h3 &#123;\n            background-color: white;\n            opacity: 0.8;\n            font-size: 40px;\n            position: sticky;\n            left: 30px;\n            border: 1px solid ;\n            top : 0;\n            padding: 0.9em;\n            margin: 0.2em\n          &#125;\n           div &#123;\n                     background-color: lightpink;\n                    font-family:   Arial, Helvetica, sans-serif;\n                      font-size: 20px;\n                    padding: 0.5em;\n                     margin: 0.5em;\n                 &#125;\n          &lt;/style>\n          &lt;/head>\n          &lt;body>\n          \n          &lt;h1>Erste Uberschrift&lt;/h1>\n          &lt;div> TEXT  &lt;/div>\n          \n          &lt;div> TEXT &lt;/div>\n          &lt;div> TEXT &lt;/div>\n          \n          &lt;div> TEXT &lt;/div>\n          \n          &lt;h2>Zweite Uberschrift&lt;/h2>\n          &lt;div> TEXT &lt;/div>\n          \n          &lt;div> TEXT &lt;/div>\n          &lt;div> TEXT &lt;/div>\n          &lt;div TEXT &lt;/div>\n          \n          &lt;h3>Dritte Uberschrift&lt;/h3>\n          &lt;div> TEXT &lt;/div>\n          &lt;div> TEXT &lt;/div>\n          &lt;div TEXT &lt;/div>\n          \n          \n          \n          &lt;/body>\n          &lt;/html>\n          \n            </pre>\n        <p><b>Schauen Sie sich folgendes <a href=\"https://www.youtube.com/watch?v=HVmnv3k4__E\" target=\"_blank\">\n              Video</a>\n            an\n            und bauen Sie das dynamische Verhalten exakt nach (nur mit HTML und CSS, ohne JavaScript): </b></p>\n        <img\n          src=\"https://upload.wikimedia.org/wikipedia/commons/a/a4/Hochschule_Bonn-Rhein-Sieg_Wolfgang_G%C3%B6ddertz_Induktion.jpg\"\n          style=\"max-width:800px;width:100%\">\n        <p><b>QUELLCODE:</b>\n          <pre> &lt;!DOCTYPE html>\n            &lt;html>\n            &lt;head>\n            &lt;style> \n            h1&#123;\n             \n              font-size: 40px;\n             &#125;\n            \n            \n            input[type='checkbox']:checked + label &#123;\n              background: url('https://upload.wikimedia.org/wikipedia/commons/a/a4/Hochschule_Bonn-Rhein-Sieg_Wolfgang_G%C3%B6ddertz_Induktion.jpg') ;\n              max-width: 900px;\n              height: 600px; \n              background-size: contain;\n              display: block;\n               margin-left: auto;\n               margin-right: auto;\n            &#125;\n            &lt;/style>\n            &lt;/head>\n            &lt;body>\n              &lt;h1> Ubung 2.2&lt;/h1>\n            &lt;input id=\"myInput\" type=\"checkbox\" name=\"myInput\">hide and show via checkbox&lt;/input>\n            &lt;label for=\"myInput\">&lt;/label>\n            \n            &lt;/body>\n            &lt;/html>\n            </pre>\n    </div>\n  </div>\n\n\n  <div class=\"rightpane\">\n    <p id=\"ausfuhren\"> QUELLCODE AUSFÜHRUNG</p>\n    <div class=\"Seite_html\">\n\n      <h1 id=\"title\">Erste Uberschrift</h1>\n      <div id=\"parg\">Le français est parlé, en 2018, sur tous les continents par environ 300 millions de personnes5,2 :\n        235\n        millions l'emploient quotidiennement,\n        et 90 millions3 en sont des locuteurs natifs. En 2018, 80 millions d'élèves et étudiants s'instruisent en\n        français dans le monde6. Selon l'Organisation\n        internationale de la francophonie (OIF), il pourrait y avoir 700 millions de francophones sur Terre en 20507.\n      </div>\n\n      <div id=\"parg\"> Dans le monde, 29 États ont le français comme langue officielle. C'est une des six langues\n        officielles ainsi\n        qu'une des deux langues de travail\n\n        France et Belgique\n      </div>\n\n\n      <h2 id=\"title\">Zweite Uberschrift</h2>\n      <div id=\"parg\">Le français est parlé, en 2018, sur tous les continents par environ 300 millions de personnes5,2 :\n        235\n        millions l'emploient quotidiennement,\n        et 90 millions3 en sont des locuteurs natifs. En 2018, 80 millions d'élèves et étudiants s'instruisent en\n        français dans le monde6. Selon l'Organisation\n        internationale de la francophonie (OIF), il pourrait y avoir 700 millions de francophones sur Terre en 20507.\n      </div>\n\n      <div id=\"parg\"> Dans le monde, 29 États ont le français comme langue officielle. C'est une des six langues\n        officielles ainsi\n        qu'une des deux langues de travail\n        de rlées originellement dans la partie septentrionale du domaine gallo-roman, sur le\n        territoire des actuelles Suisse,\n        France et Belgique\n      </div>\n\n\n\n      <h3 id=\"title\">Dritte Uberschrift</h3>\n\n      <div id=\"parg\"> Dans le monde, 29 États ont le français comme langue officielle. C'est une des six langues\n        officielles ainsi\n        qu'une des deux langues de travail\n        de l'Oïl,\n        un groupe de langues romanes parlées originellement dans la partie septentrionale du domaine gallo-roman, sur le\n        territoire des actuelles Suisse,\n        France et Belgique\n      </div>\n    </div>\n    <br><br><br><br> <br><br><br><br><br><br><br><br><br><br><br><br><br><br>\n\n    <p id=\"ausfuhren\"> QUELLCODE AUSFÜHRUNG</p>\n    <div class=\"Seite_html\">\n      <h1 id=\"u2\"> Ubung 2.2</h1>\n      <input id=\"myInput\" type=\"checkbox\" name=\"myInput\">hide and show via checkbox\n      <label for=\"myInput\"></label>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-Ex63',\n  templateUrl: './Ex63.component.html',\n  styleUrls: ['./Ex63.component.scss']\n})\nexport class Ex63Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"middlepane\">\n    <div id=\"aufgabe\">\n      <h1>6.3. Topologischer Generator</h1>\n      <p><b>Stellen Sie bei Ihrer Klasse aus der letzten Aufgabe die topologische Iterierbarkeit mittels Generator her.\n          Wählen Sie eine Implementierung, die universell gültig, also nicht nur für das Beispiel gilt. </b></p>\n      <p>Geben Sie die HTML-Seite inkl. ES6-Code inkl. Tests hier ein. Verwenden Sie für Ihre Tests die Funktion <a\n          href=\"https://developer.mozilla.org/de/docs/Web/API/Console/assert\" target=\"_blank\">console.assert</a>. </p>\n      <p>QUELLCODE:</p>\n\n\n\n\n      <pre>&lt;!DOCTYPE html>\n        &lt;html>\n        &lt;head>\n        \n        &lt;/head>\n        &lt;body>\n        \n        \n        &lt;h1>Geben Sie Bitte eine Vorrangrelationen in Dieser Schreibweise  :&lt;br>\n                   schlafen,studieren,essen,studieren,studieren,prüfen&lt;/h1>\n        &lt;br>\n        \n        \n        &lt;textarea id=\"textarea\" rows=\"4\" cols=\"50\" placeholder=\"write your Text and please use some nested brackets\" >\n        &lt;/textarea>\n        \n          &lt;button class=\"button\" onclick = check() >check Text&lt;/button>\n        \n        &lt;br>\n        \n        &lt;textarea id=\"textarea2\" rows=\"4\" cols=\"50\" placeholder=\"your result\" >\n        &lt;/textarea>\n         &lt;script>\n        \n        function topsort(array) &#123;\n        \n        \n            var Knoten = [];\n            var pack = [];\n            var gesehen = [];\n        \n            for (var k = 0; k &lt; array.length; k++) &#123;\n                if (Knoten.indexOf(array[k][0]) &lt; 0) Knoten.push(array[k][0]);\n                if (Knoten.indexOf(array[k][1]) &lt; 0) Knoten.push(array[k][1]);\n            &#125;\n        \n            Knoten.forEach(function (knote) &#123;\n                if (gesehen.indexOf(knote) &lt; 0) &#123;\n                    sort(knote);\n                &#125;\n            &#125;);\n        \n            function sort(knote) &#123;\n                gesehen.push(knote);\n                array.forEach(function (Kante) &#123;\n                    if (gesehen.indexOf(Kante[1]) &lt; 0 && Kante[0] == knote) &#123;\n                        sort(Kante[1]);\n                    &#125;\n                &#125;);\n                pack.push(knote);\n            &#125;\n            return pack.reverse();\n        &#125;\n        \n        class Vorrang &#123;\n            //GENERATOR\n            *[Symbol.iterator]() &#123;\n                    for(const arrayElem of this.array)&#123;\n                        yield arrayElem;\n                    &#125;\n                &#125;\n            constructor(array) &#123;\n                this.array = topsort(array);\n            &#125;\n        \n        \n        &#125;\n        \n        \n        function check() &#123;\n            try &#123;\n        \n                var text= document.getElementById(\"textarea\").value;\n                console.log(text);\n        \n                var array = text.split(\",\").map(String);\n                if ((array.length % 2) != 0) &#123;\n                    throw new Error(' Geben Sie bitte eine Komplette Vorrangrelationen');\n                &#125;\n        \n                var gfg = new Array(array.length / 2);\n        \n        \n                // Loop to create 2D array using 1D array\n                for (var i = 0; i &lt; gfg.length; i++) &#123;\n                    gfg[i] = new Array(2);\n                &#125;\n        \n                var h = 0;\n        \n                // Loop to initialize 2D array elements.\n                for (var i = 0; i &lt; array.length / 2; i++) &#123;\n                    for (var j = 0; j &lt; 2; j++) &#123;\n                        gfg[i][j] = array[h++];\n                    &#125;\n                &#125;\n        \n                const studentenLeben = new Vorrang(gfg);\n        \n                var final = [];\n                for (const next of studentenLeben) &#123;\n                    final.push(next);\n                &#125;\n                \n                //test\n                test();\n        \n                document.getElementById(\"textarea2\").value=final;\n        \n            &#125; catch (err) &#123;\n        \n                document.getElementById(\"textarea2\").value=err.message;\n            &#125;\n        &#125;\n        \n        //test\n        function test() &#123;\n            const array = new Vorrang([\n                [\"schlafen\", \"studieren\"],\n                [\"essen\", \"studieren\"],\n                [\"studieren\", \"prüfen\"]\n            ]);\n            var arrayfinal = [];\n            for (const next of array) &#123;\n                arrayfinal.push(next);\n            &#125;\n            var ausgabe = [\"schlafen\", \"essen\", \"studieren\", \"prüfen\"];\n            for (let i = 0; i &lt; arrayfinal.length; i++) &#123;\n        \n                console.assert(ausgabe[i] === arrayfinal[i], `diese beide Werte $&#123;ausgabe[i]&#125; und $&#123;arrayfinal[i]&#125; sind nicht gleich`);\n            &#125;\n        &#125;\n        \n        \n        &lt;/script>\n        \n        &lt;/body>\n        &lt;/html>\n            </pre>\n    </div>\n  </div>\n  <div class=\"rightpane\">\n    <p id=\"ausfuhren\"> QUELLCODE AUSFÜHREN</p>\n    <a class=\"execute\" href=\"assets/loesung 6.3.html\" target=\"_blank\">klicken SIE HIER BITTE !</a>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sheet1Ex1',\n  templateUrl: './sheet1Ex1.component.html',\n  styleUrls: ['./sheet1Ex1.component.scss']\n})\nexport class Sheet1Ex1Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div id=\"aufgabe\">\n  <h1>Aufgabe 1.1 Fachliche Argumentation über Erfolgsprinzipien des WWW</h1>\n\t<p><b>Mit welchen fachlichen Argumenten wurde das WWW-Proposal von TBL abgelehnt?</b></p>\n\t<p>Das WWW-Proposal war nur eine Idee (Konzept-Papier) und kein offizielles Projekt.Fehlende Integration sogar innerhalb eines Betriebs.</p>\n\t\n\t<p><b>Was sind die fachlichen Argumente, warum das WWW dennoch ein Erfolg wurde?</b></p>\n\t<p>das Konzept ist mit Evolvierbarkeit verwechselt . dann ist es Implementiert als U-Boot-Projekt den ersten WWW-Server, den ersten WWW-Browser für HTML-Dokumente auf NeXT. Neben dem Browser war es das Hypertext Transfer Protocol (HTTP), das Protokoll zur Übertragung von Daten, sowie der Uniform Resource Identifier (URI), der der eindeutigen Identifizierung eines Dokuments im Netz dient. </p>\n\t\n\t<p><b>Was wäre der Preis für die garantierte Verhinderung von “broken links”?</b></p>\n\t<p>um die Verhinderung von “broken links” ist die referentielle integrität benutzt. Bei der referentiellen Integrität können Datensätze die einen Fremdschlüssel aufweisen nur dann gespeichert werden, wenn der Wert des Fremdschlüssels einmalig in der referenzierten Tabelle existiert. dann alle Änderungen müssen nachvollziehbar sein.</p>\n\t\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-Ex12',\n  templateUrl: './Ex12.component.html',\n  styleUrls: ['./Ex12.component.scss']\n})\nexport class Ex12Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div id=\"aufgabe\"><h1>Aufgabe 1.2. HTTP</h1>\n\t<p><b>Sie bekommen im Browser den HTTP Status Code 200. Was bedeutet das?</b></p>\n\t<p> HTTP-Statuscode 200 OK gibt an, dass eine Anfrage erfolgreich verlaufen ist.</p>\n\t\n\t<p><b>Sie bekommen im Browser den HTTP Status Code 301. Was hat das zu bedeuten? </b></p>\n\t<p>HTTP Status Code 301 bedeutet, dass der URI der angeforderten Ressource geändert wurde. </p>\n\t\n\t<p><b>Sie bekommen im Browser den HTTP Status Code 400. Was hat das zu bedeuten? Was können Sie dagegen tun? </b></p>\n\t<p>HTTP Status Code 400 bedeutet, dass der Server die Anfrage aufgrund einer ungültigen Syntax nicht verstehen konnte. </p>\t\n\t\n\t<p><b>Sie bekommen im Browser den HTTP Status Code 403. Was hat das zu bedeuten? Was können Sie dagegen tun? </b></p>\n\t<p>Der Client hat keine Zugriffsrechte auf den Inhalt. </p>\t\n\n\t<p><b>In einer Webanwendung benötigen Sie eine OPTIONS-Anfrage, die die Optionen des Servers vor dem eigentlichen Zugriff erfragen soll. Aus Performanzgründen soll die Abfrage jedoch cacheable sein. Wie könnten Sie dafür eine Lösung angehen? </b></p>\n\t<p>Die Abfrage belebig oft stellen um die gleiche Ergebnisse zu bekommen oder Man kann auch die Access-Control-Max-Age benutzen,somit maximale Anzahl von Sekunden, für die die Ergebnisse zwischengespeichert werden können. </p>\t\n\n\t</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-Ex43',\n  templateUrl: './Ex43.component.html',\n  styleUrls: ['./Ex43.component.scss']\n})\nexport class Ex43Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div id=\"aufgabe\">\n  <h1>Aufgabe 4.3. Fibonacci</h1>\n  <p><b>Schreiben Sie im Browser die <a href=\"https://cssgridgarden.com/#de\" target=\"_blank\">Fibonacci-Funktion</a> in\n      JavaScript und geben Sie die ersten 2000 Fibonacci-Zahlen 0,1,1,2,3,5,8,13,... auf der Konsole mit console.log()\n      aus.\n      Achten Sie auf Performanz: Berechnen Sie jeden Fibonacci-Wert nur einmal. Speichern Sie zu diesem Zweck jede\n      bereits berechnete Fibonacci-Zahl in einer Tabelle.\n\n      <p>QUELLCODE:</p>\n      <pre> &lt;!DOCTYPE html>\n        &lt;html>\n        &lt;head>\n        &lt;meta charset=\"ISO-8859-1\">\n        &lt;title>Insert title here&lt;/title>\n        &lt;script>function fibonacci(n) &#123;\n            var tabelle = [1,1]\n            for (let i=2; i &lt; n; i++) &#123;\n                tabelle[i] = tabelle[i-1] + tabelle[i-2];\n                console.log(tabelle[i]);\n            &#125;\n            return tabelle;\n        &#125;\n        &lt;/script> \n        \n        &lt;/head>\n        &lt;body >\n            &lt;button type =\"button\" onclick=\"fibonacci(100)\"> OUTPUT &lt;/button>\n        &lt;/body>\n        &lt;/html>\n            </pre>\n\n      <p><b>Was ist die größte Fibonacci-Zahl, die sich noch als Integer sicher speichern lässt ( <a\n            href=\"https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER\"\n            target=\"_blank\">Number.MAX_SAFE_INTEGER</a>)? Die wievielte Fibonacci-Zahl in der Fibonacci-Folge ist das?\n          <pre>function fibonacci(n) &#123;\n                var tabelle = [1,1]\n                const x = Number.MAX_SAFE_INTEGER;\n                var y = 0;\n                for (let i=2; i < n; i++) &#123;\n                    tabelle[i] = tabelle[i-1] + tabelle[i-2]\n                    if(tabelle[i]>x)&#123; \n                        y=tabelle[i-1];\n                        console.log( \"the number is  \" + y + \"  and in der Folge  \"+ i--); \n                        break;\n                    &#125;\n                &#125;  \n            &#125;\n            fibonacci(100);\n            \n            //the number is  8944394323791464  kommt in der Stelle 78\n            </pre>\n          <p><b>Was ist die größte Fibonacci-Zahl, die sich noch als Number speichern lässt (<a\n                href=\"https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_VALUE\"\n                target=\"_blank\">Number.MAX_VALUE</a>)? Die wievielte Fibonacci-Zahl in der Fibonacci-Folge ist das (d.h.\n              welche Stelle in der Fibonacci-Folge)?\n              <pre>function fibonacci(n) &#123;\n                var tabelle = [1,1]\n                const x = Number.MAX_VALUE;\n                var y = 0;\n                for (let i=2; i < n; i++) &#123;\n                    tabelle[i] = tabelle[i-1] + tabelle[i-2]\n                            console.log(tabelle[i]);\n            \n                    if(tabelle[i]>x)&#123; \n                        y=tabelle[i-1];\n                        console.log( \"the number is  \" + y + \"  kommt in der Folge  \"+ i--); \n                        break;\n                    &#125;\n                &#125;\n                \n            &#125;\n            fibonacci(1000);\n            \n            //the number is  1.3069892237633987e+308  kommt in der Stelle 1476</pre>\n\n              <p><b>Wechseln Sie zu <a\n                    href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt\"\n                    target=\"_blank\">BigInt</a>, um alle 2000 Fibonacci-Zahlen korrekt anzuzeigen. Geben Sie hier HTML-\n                  und JavaScript-Code zusammen ein: </b></p>\n              <pre>&lt;!DOCTYPE html>\n            &lt;html>\n            &lt;head>\n            &lt;meta charset=\"ISO-8859-1\">\n            &lt;title>Insert title here&lt;/title>\n            &lt;script>\n            function fibonacci(n) &#123;\n                var tabelle = [BigInt(1),BigInt(1)]\n             \n                for ( i=2; i &lt; n; i++) &#123;\n                    tabelle[i] = BigInt(tabelle[i-1]) + BigInt(tabelle[i-2]);\n                            console.log(tabelle[i]);\n            \n             \n                &#125;\n                \n            &#125;\n            \n            \n            &lt;/script> \n            \n            &lt;/head>\n            &lt;body >\n                &lt;button type =\"button\" onclick=\"fibonacci(2000)\"> OUTPUT &lt;/button>\n            &lt;/body>\n            &lt;/html></pre>\n              <p><b>Optional: Was ist die größte Fibonacci-Zahl, die Sie mit<code> BigInt </code>korrekt berechnet\n                  haben? An welcher Stelle in der Fibonacci-Folge steht diese? </b></p>\n              <pre>the number is  8944394323791464n  kommt in der Stelle 78 </pre>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-Ex111',\n  templateUrl: './Ex111.component.html',\n  styleUrls: ['./Ex111.component.scss']\n})\nexport class Ex111Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"middlepane\">\n    <div id=\"aufgabe\">\n      <h1>11.1 Registrierung mit PHP</h1>\n      <p><b>Erstellen Sie mit PHP 5 auf www2.inf.h-brs.de ein Registrierungsformular. Speichern Sie die eingegebenen\n          Daten\n          persistent in einer Datei auf www2.inf.h-brs.de. Schreiben Sie Ihre PHP-Scripte so,\n          dass es zu keinen<a href=\"https://de.wikipedia.org/wiki/Wettlaufsituation\" target=\"_blank\">\n            Nebenläufigkeitsartefakten</a> (z.B.<a href=\"https://de.wikipedia.org/wiki/Verlorenes_Update\"\n            target=\"_blank\">\n            Lost Update </a>) kommen kann, egal wie viele Nutzer sich gleichzeitig registrieren. </b></p>\n      <p>Geben Sie hier Ihre vollständige Lösung für das Registrierungsformular (ggfs. mit allen Dateien hintereinander)\n        ein:</p>\n      <pre>&lt;!DOCTYPE html>\n        &lt;html>\n        &lt;head>\n        \n        &lt;/head>\n        \n        \n            &lt;div class=main> \n            &lt;h1>Registrierung&lt;/h1>\n        &lt;form method=\"post\">\n                Username:&lt;br>\n                &lt;input type=\"text\" name=\"username\">\n                &lt;br>\n                PASSWORD:&lt;br>\n                &lt;input type=\"password\" name=\"password\">\n                &lt;br>\n                &lt;input type=\"submit\" >\n        &lt;/form>\n        \n        \n        \n        &lt;/div>\n        \n        &lt;/html>\n        &lt;?php\n            if(isset($_POST['username']) && isset($_POST['password'])) &#123;\n                $username = $_POST['username'];\n                $password = $_POST['password'];\n                $file = './Accounts.csv';\n                $new_line = hash(\"sha256\", $username) . ',' . hash(\"sha256\", $password) . \"\\n\";\n                if(file_put_contents($file, $new_line, FILE_APPEND | LOCK_EX)) &#123;\n                    echo \"&lt;script>alert('Erfolgreich registriert')&lt;/script>\";\n                 &#125;\n             &#125;\n        ?>\n            \n\t</pre>\n    </div>\n  </div>\n  <div class=\"rightpane\">\n    <p id=\"ausfuhren\"> QUELLCODE AUSFÜHREN</p>\n    <a class=\"execute\" href=\"http://localhost/phpscript/register.php\" target=\"_blank\">klicken SIE HIER BITTE !</a>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-tasks',\r\n  templateUrl: './tasks.component.html',\r\n  styleUrls: ['./tasks.component.scss']\r\n})\r\nexport class TasksComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<p>\r\n  tasks works!\r\n</p>\r\n<p>\r\n  tasks works!\r\n</p>\r\n<p>\r\n  tasks works!\r\n</p>\r\n<p>\r\n  tasks works!\r\n</p>\r\n<p>\r\n  tasks works!\r\n</p>\r\n<p>\r\n  tasks works!\r\n</p>\r\n<p>\r\n  tasks works!\r\n</p>\r\n<p>\r\n  tasks works!\r\n</p>\r\n<p>\r\n  tasks works!\r\n</p>\r\n<p>\r\n  tasks works!\r\n</p>\r\n<p>\r\n  tasks works!\r\n</p>\r\n<p>\r\n  tasks works!\r\n</p>\r\n<p>\r\n  tasks works!\r\n</p>\r\n<p>\r\n  tasks works!\r\n</p>\r\n<p>\r\n  tasks works!\r\n</p>\r\n<p>\r\n  tasks works!\r\n</p>\r\n<p>\r\n  tasks works!\r\n</p>\r\n<p>\r\n  tasks works!\r\n</p>\r\n<p>\r\n  tasks works!\r\n</p>\r\n<p>\r\n  tasks works!\r\n</p>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-Ex53',\n  templateUrl: './Ex53.component.html',\n  styleUrls: ['./Ex53.component.scss']\n})\nexport class Ex53Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"middlepane\">\n    <div id=\"aufgabe\">\n      <h1>5.3. TopSort als WebApp</h1>\n      <p><b>Schreiben Sie eine Web-Oberfläche, in der man beliebige Beziehungen (Vorrang-Relationen) eingeben kann, für\n          die\n          dann die topologische Sortierung per Knopfdruck auf der Webseite ausgegeben wird. Für die Eingabe können Sie<a\n            href=\"https://www.w3schools.com/html/html_forms.asp\" target=\"_blank\"> HTML5-Eingabefelder </a>oder <a\n            href=\"https://www.w3schools.com/tags/att_global_contenteditable.asp\" target=\"_blank\">contentEditable</a>\n          verwenden.\n        </b></p>\n      <p>Geben Sie die komplette HTML-Seite exkl. JavaScript-Quelltext an. Schreiben Sie Ihren JavaScript-Quelltext\n        in eine separate Datei. </p>\n      <p><b>QUELLCODE:</b></p>\n      <pre> &lt;!DOCTYPE html>\n        &lt;html lang=\"de\">\n        &lt;head>\n          &lt;meta charset=\"UTF-8\">\n          &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n          &lt;title>TopSort&lt;/title>\n            &lt;title>Aufgabe 5.3 TopSort&lt;/title>\n           \n        &lt;/head>\n        \n        &lt;body>\n            &lt;header>\n                &lt;h1>Aufgabe 5.3 TopSort&lt;/h1>\n            \n            &lt;/header>\n                &lt;p>&lt;b>NEUE RELATION HINFUGEN &lt;/b>&lt;button onclick=\"newRelation()\">neue Relation&lt;/button>&lt;/p>\n                \n        \n                &lt;form id=\"newRelation\"> &lt;/form> &lt;br>\n                &lt;input id=\"newRelation-submit\"  onclick=\"inputGet()\"  type=\"submit\" value=\"DONE\">\n                &lt;p id=\"ergbnis\" > Eine Mögliche topologische Sortierung: &lt;/p>\n        \n           \n            &lt;script src=\"topSort.js\">&lt;/script>\n        &lt;/body>\n        &lt;script>\n        \n        \n        \n        \n        &lt;/script>\n        &lt;/html> \n          </pre>\n\n      <p>Fügen Sie Ihren JavaScript-Quelltext aus der separaten Datei in das folgende Textarea ein:</p>\n\n      <p><b>topSort.js:</b></p>\n      <pre>\n\n        var formNum = 0,arrRelations = [];\n        function newRelation() &#123;\n        let i=0;\n            while(i!=2) &#123;\n              i++;\n              var newIn = 'newRelation-input-' + formNum++;\n              var input = document.createElement(\"input\");\n                    input.type = \"text\";\n                input.id = newIn;\t\n              document.getElementById(\"newRelation\").appendChild(input);\n            &#125;\n            \n        &#125;\n        function inputGet() &#123;\n            var d2Arr = [];\n            for (i = 0; i < formNum; i++) &#123;\n                d2Arr.push(document.getElementById(`newRelation-input-$&#123;i&#125;`).value);\n                if (i % 2 != 0) &#123;arrRelations.push(d2Arr); d2Arr = [];\n                 &#125;\n             &#125;\n          topsort(arrRelations);\n        &#125;\n        \n        \n        function topsort(array) &#123;\n               var length = 0, finalArray = [], listPred = &#123;&#125;;\n        \n                for(var i in array) &#123;\n                        if(listPred[array[i][0]] == null) &#123;\n                                listPred[array[i][0]] = 0;\n                                length++; &#125;\n                        \n                        if(listPred[array[i][1]] == null) &#123;\n                                listPred[array[i][1]] = 1;\n                                length++;&#125; else &#123;\n                                listPred[array[i][1]]++;\n                      &#125;\n              &#125;\n                \n              while(length > 0) &#123;\n                     for(var i in listPred) &#123;\n                                if(listPred[i] == 0) &#123;\n                                  finalArray.push(i);  \n                                  for(var j in array) &#123;\n                                        if(array[j][0] === i) &#123;\n                                              listPred[array[j][1]]--; &#125;\n                                        &#125;\n                                        \n                                        delete listPred[i];\n                                        length--;\n                              &#125;\n                      &#125;\n               &#125;\n                \n        document.getElementById(\"ergbnis\").innerHTML = finalArray.toString();\n        &#125;\n        \n        \n          </pre>\n\n    </div>\n  </div>\n\n\n  <div class=\"rightpane\">\n    <p id=\"ausfuhren\"> QUELLCODE AUSFÜHREN</p>\n    <a class=\"execute\" href=\"assets/loesung5.3.html\" target=\"_blank\">klicken SIE HIER BITTE !</a>\n  </div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-Ex41',\n  templateUrl: './Ex41.component.html',\n  styleUrls: ['./Ex41.component.scss']\n})\nexport class Ex41Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div id=\"aufgabe\">\n  <h1>Aufgabe 4.1. Funktionen</h1>\n  <p><b>Schreiben Sie eine Funktion<code> identity()</code>, die ein Argument als Parameter entgegen nimmt und dieses\n      als Ergebnis zurück gibt.</b></p>\n\n  <p>QUELLCODE:</p>\n  <pre> function identity(arg) &#123;\n    return arg; &#125;\n\t</pre>\n\n\n  <p><b>Schreiben Sie eine Funktion<code> identity_function()</code>, die ein Argument als Parameter entgegen nimmt und\n      eine Funktion zurück gibt, die dieses Argument zurück gibt.</b></p>\n\n  <p>QUELLCODE:</p>\n  <pre> function identity_function(arg) &#123;\n    return (\n        function() &#123;\n            return arg;\n        &#125;\n    )\n\n\t</pre>\n\n  <p><b>Schreiben Sie zwei binäre Funktionen <code> add</code> und <code> mul</code>, die Summe und Produkt\n      berechnen.</b></p>\n\n  <p>QUELLCODE:</p>\n  <pre> function add(x,y) &#123;\n    return x+y;\n&#125;\n\nfunction mul(x,y) &#123;\n    return x*y;\n&#125;\n</pre>\n\n  <p><b>Schreiben Sie eine Addier-Funktion <code> addf()</code> sodass <code> addf(x)(y)</code> genau <code> x+y</code>\n      ,zurück gibt. (Es haben also zwei Funktionsaufrufe zu erfolgen. <code>addf(x)</code> liefert eine Funktion, die\n      auf <code>y</code> angewandt wird.)</b></p>\n\n  <pre> function addf(x)&#123;\n                return (\n                    function(y) &#123;\n                        return x+y;\n                    &#125;  ) &#125;\n            </pre>\n\n\n  <p><b>Schreiben Sie eine Funktion<code> applyf(),</code> die aus einer binären Funktion wie <code>add(x,y)</code> eine\n      Funktion <code>addf</code> berechnet, die mit zwei Aufrufen das gleiche Ergebnis liefert, z.B. <code>addf =\n        applyf(add); addf(x)(y) </code> soll <code>add(x,y)</code> liefern. Entsprechend <code>applyf(mul)(5)(6)</code>\n      soll <code>30 </code> liefern, wenn <code>mul</code> die binäre Multiplikation ist.\n\n      <p>QUELLCODE:</p>\n      <pre> function applyf(binar) &#123;\n    return (\n        function(x) &#123;\n            return (\n                function(y) &#123;\n                    return binar(x,y);\n             &#125;\n          )\n      &#125;\n   )\n&#125;\nconsole.log(applyf(mul)(5)(3))\n\n</pre>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-body',\n  templateUrl: './body.component.html',\n  styleUrls: ['./body.component.scss']\n})\nexport class BodyComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"middlepane\">\r\n  <app-tasks></app-tasks>\r\n</div>\r\n<div class=\"rightpane\">\r\n  <app-solution></app-solution>\r\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-Ex51',\n  templateUrl: './Ex51.component.html',\n  styleUrls: ['./Ex51.component.scss']\n})\nexport class Ex51Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"middlepane\">\n    <div id=\"aufgabe\">\n      <h1>5.1. Performanzmessungen von DOM-Operationen</h1>\n      <p><b>Implementieren Sie Performanzmessungen zum Vergleich von <code style=\"color:#ff0000\"> innerHTML,\n            innerText, textContent und outerHTML </code>selbstständig in JavaScript durch Nutzung der <a\n            href=\"https://www.w3schools.com/js/js_htmldom.asp\" target=\"_blank\">DOM API</a>. Geben Sie die\n          Messergebnisse als Tabelle aus. Verwenden Sie die eingebauten Zeitmess-Funktionen <a\n            href=\"https://developer.mozilla.org/en-US/docs/Web/API/Performance/now\" target=\"_blank\">performance.now\n            ()</a>,\n          siehe auch<a\n            href=\"https://developers.google.com/web/updates/2012/08/When-milliseconds-are-not-enough-performance-now\"\n            target=\"_blank\"> When-milliseconds-are-not-enough-performance-now </a>. Suchen Sie eine möglichst kurze\n          und elegante Lösung.Dabei ist zu beachten, dass Browser, um potenzielle Sicherheitsbedrohungen\n          wie <a href=\"https://spectreattack.com/\" target=\"_blank\"> Spectre </a>oder<a\n            href=\"https://de.wikipedia.org/wiki/Meltdown_(Sicherheitsl%C3%BCcke)\" target=\"_blank\"> Meltdown</a> zu\n          minimieren, den zurückgegebenen Wert normalerweise um einen bestimmten Betrag runden. Dies führt zu einer\n          gewissen Ungenauigkeit.\n          Beispielsweise rundet Firefox die zurückgegebene Zeit in Schritten von 1 Millisekunde. Diese Zwangsrundung\n          kann man jedoch wiederum abschalten mittels Firefox\n          setting <code style=\"color:#ff0000\">aprivacy.reduceTimerPrecision </code>,<a\n            href=\"https://stackoverflow.com/questions/50117537/how-to-get-microsecond-timings-in-javascript-since-spectre-and-meltdown\"\n            target=\"_blank\"> siehe </a>How to get microsecond timings in JavaScript since Spectre and Meltdown.</b>\n      </p>\n      <p>Geben Sie die komplette HTML-Seite inkl. JavaScript-Quelltext an: </p>\n      <p><b>QUELLCODE:</b></p>\n\n      <pre> &lt;!DOCTYPE html>\n        &lt;html>\n        &lt;head>\n        &lt;meta charset=\"ISO-8859-1\">\n           \n        &lt;/head>\n              \n        \n        &lt;body>\n        \n            &lt;div  >\n            &lt;h1 id=\"text\">dieser Text wiederholt sich 10000 Mal&lt;/h1>\n            &lt;/div>\n            &lt;table>\n               &lt;tr>\n                    &lt;td>innerHtml &lt;/td>\n                    &lt;td id=\"innerHtml\">&lt;/td>\n               &lt;/tr>\n        \n               &lt;tr>\n                    &lt;td> innerText&lt;/td>\n                    &lt;td id=\"innerText\">&lt;/td>\n               &lt;/tr>\n                \n               &lt;tr>\n                    &lt;td>textContent&lt;/td>\n                    &lt;td id=\"textContent\">&lt;/td>\n               &lt;/tr>\n                \n               &lt;tr>\n                    &lt;td>outerHtml\n                    &lt;/td>&lt;td id=\"outerHtml\">&lt;/td>\n               &lt;/tr>    \n            &lt;/table>\n        \n        &lt;/body>\n          &lt;script > var list = document.getElementById('text');\n                let time = performance.now();\n                for (var i = 0; i &lt; 10000; i++) \n                &#123;list.innerHTML ;&#125;\n                let timeNew = performance.now();\n                document.getElementById(\"innerHtml\").textContent = `$&#123;timeNew -time&#125;ms`;\n                \n                 time = performance.now();\n                for (var i = 0; i &lt; 10000; i++) \n                &#123;list.innerText ;&#125;\n                timeNew = performance.now();\n                document.getElementById(\"innerText\").textContent = `$&#123;timeNew - time&#125;ms`;\n                \n                time = performance.now();\n                for (var i = 0; i &lt; 10000; i++)\n                &#123;list.textContent ;&#125;\n                timeNew = performance.now();\n                document.getElementById(\"textContent\").textContent = `$&#123;timeNew - time&#125;ms`;\n                \n                time = performance.now();\n                for (var i = 0; i &lt; 10000; i++)\n                &#123;  list.outerHtml ; &#125;\n               timeNew = performance.now();    \n                document.getElementById(\"outerHtml\").textContent = `$&#123;timeNew - time&#125; ms`;\n                &lt;/script>\n        &lt;/html>\n        \n        \n          </pre>\n    </div>\n  </div>\n\n  <div class=\"rightpane\">\n    <p id=\"ausfuhren\"> QUELLCODE AUSFÜHREN</p>\n    <a class=\"execute\" href=\"assets/loesung5.1.html\" target=\"_blank\">klicken SIE HIER BITTE !</a>\n  </div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'omar-project';\n}\n","<router-outlet></router-outlet>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-Ex72',\n  templateUrl: './Ex72.component.html',\n  styleUrls: ['./Ex72.component.scss']\n})\nexport class Ex72Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div id=\"aufgabe\">\n  <h1>7.2 Textanalyse mit filter-map-reduce</h1>\n  <p><b>Schreiben Sie in JavaScript eine Textanalyse. Ermitteln Sie die häufigsten Begriffe im Text <a\n        href=\"https://kaul.inf.h-brs.de/we/assets/html/plagiatsresolution.html\" target=\"_blank\"> Plagiatsresolution.</a>\n      Filtern Sie dabei alle <a href=\"https://de.wikipedia.org/wiki/Stoppwort\" target=\"_blank\">Stoppworte</a> und\n      HTML-Tags. Reduzieren Sie das Ergebnis auf die 3 häufigsten Begriffe.\n      <br>\n      Hinweis: Eine größere Stoppwort-Liste finden Sie auch unter <a\n        href=\"https://github.com/stopwords-iso/stopwords-de\" target=\"_blank\">\n        github.com/stopwords-iso/stopwords-de</a>.</b></p>\n\n  <p>Üben Sie sich in Funktionaler Programmierung. Geben Sie Ihren Quellcode hier ein. </p>\n  <p><b>QUELLCODE:</b></p>\n\n  <pre> var Stoppworte = [\"ab\", \"aber\", \"alle\", \"allem\", \"allen\", \"aller\", \"allerdings\",\"als\", \"also\", \"am\", \"an\", \"andere\", \"anderem\", \"anderen\", \"anderer\", \n\t\"andernfalls\", \"anders\", \"andersherum\", \"anfangs\", \"anhand\", \"anschließend\",\n\t\"ansonsten\", \"anstatt\", \"auch\", \"auf\", \"aufgrund\", \"aus\", \"außerdem\", \"befindet\",\n\t\"bei\", \"beide\", \"beim\", \"beispielsweise\", \"bereits\", \"besonders\", \"besteht\", \"bestimmte\",\n\t\"bestimmten\", \"bestimmter\", \"bevor\", \"bietet\", \"bis\", \"bleiben\", \"bringen\", \"bringt\", \"bsp\",\n\t\"bzw\", \"d.h\", \"da\", \"dabei\", \"dafür\", \"daher\", \"damit\", \"danach\", \"dann\", \"dar\", \"daran\", \"darauf\",\n\t\"daraus\", \"darf\", \"darstellt\", \"darüber\", \"das\", \"dass\", \"davon\", \"dazu\", \"dem\", \"demzufolge\", \"den\", \n\t\"denen\", \"denn\", \"der\", \"deren\", \"des\", \"dessen\", \"desto\", \"die\", \"dies\", \"diese\", \"diesem\", \"diesen\", \n\t\"dieser\", \"dieses\", \"doch\", \"dort\", \"durch\", \"ebenfalls\", \"eher\", \"eigenen\", \"eigentlich\", \"ein\", \"eine\",\t\t\t\t\n\t\"einem\", \"einen\", \"einer\", \"eines\", \"einigen\", \"einiges\", \"einmal\", \"einzelnen\", \"entscheidend\", \"entweder\",\t\t\t\n\t\"er\", \"erstmals\", \"es\", \"etc\", \"etwas\", \"euch\", \"folgende\", \"folgendem\", \"folgenden\", \"folgender\", \"folgendes\", \n\t\"folgt\", \"für\", \"ganz\", \"gegen\", \"gehen\", \"gemacht\", \"genannte\", \"genannten\", \"gerade\", \"gerne\", \"gibt\", \"gilt\",\n\t\"gleich\", \"gleichen\", \"gleichzeitig\", \"habe\", \"haben\", \"hält\", \"hat\", \"hatte\", \"hätte\", \"hauptsächlich\", \"her\", \n\t\"heutigen\", \"hier\", \"hierbei\", \"hierfür\", \"hin\", \"hingegen\", \"hinzu\", \"hoch\", \"ihn\", \"ihr\", \"ihre\", \"ihren\", \"ihrer\",\n\t\"im\", \"immer\", \"immerhin\", \"in\", \"indem\", \"insgesamt\", \"ist\", \"ja\", \"je\", \"jede\", \"jedem\", \"jeder\", \"jedes\", \"jedoch\", \n\t\"jetzt\", \"jeweilige\", \"jeweiligen\", \"jeweils\", \"kam\", \"kann\", \"keine\", \"kommen\", \"kommt\", \"können\", \"konnte\", \"könnte\",\n\t\"konnten\", \"lassen\", \"lässt\", \"lautet\", \"lediglich\", \"leider\", \"letztendlich\", \"letztere\", \"letzteres\", \"liegt\", \"machen\",\n\t\"macht\", \"mal\", \"man\", \"mehr\", \"mehrere\", \"meine\", \"meinem\", \"meisten\", \"mich\", \"mit\", \"mithilfe\", \"mittels\", \"möchte\", \"möglich\", \n\t\"möglichst\", \"momentan\", \"muss\", \"müssen\", \"musste\", \"nach\", \"nachdem\", \"nächsten\", \"nahezu\", \"nämlich\", \"natürlich\", \"neue\", \"neuen\", \"nicht\",\n\t\"nichts\", \"noch\", \"nun\", \"nur\", \"ob\", \"obwohl\", \"oder\", \"oftmals\", \"ohne\", \"per\", \"sämtliche\", \"scheint\", \"schon\", \"sehr\", \"sein\", \"seine\", \"seinem\", \"seinen\", \"sich\", \"sicherlich\", \"sie\", \"siehe\", \"sind\", \"so\", \"sobald\", \"sofern\", \"solche\", \"solchen\", \"soll\", \"sollen\", \"sollte\", \"sollten\", \"somit\", \"sondern\", \"sorgt\", \"sowie\", \"sowohl\", \"später\", \"sprich\", \"statt\", \"trotz\", \"über\", \"überhaupt\", \"um\", \"und\", \"uns\", \"unter\", \"usw\", \"viel\", \"viele\", \"vielen\", \"völlig\", \"vom\", \"von\", \"vor\", \"vorerst\", \"vorher\", \"während\", \"war\", \"wäre\", \"waren\", \"warum\", \"was\", \"weil\", \"weitere\", \"weiteren\", \"weiterer\", \"weiteres\", \"weiterhin\", \"welche\", \"welchen\", \"welcher\", \"welches\", \"wenn\", \"wer\", \"werden\", \"wesentlich\", \"wichtige\", \"wichtigsten\", \"wie\", \"wieder\", \"wiederum\", \"will\", \"wir\", \"wird\", \"wirklich\", \"wo\", \"wobei\", \"worden\", \"wurde\", \"wurden\", \"z.b\", \"ziemlich\", \"zu\", \"zuerst\", \"zum\", \"zur\", \"zusätzlich\", \"zuvor\", \"zwar\", \"zwecks\"];\n\nvar XMLHttpRequest = require(\"xmlhttprequest\").XMLHttpRequest;\n\nvar xhr = new XMLHttpRequest();\nxhr.open(\"GET\", \"https://kaul.inf.h-brs.de/we/assets/html/plagiatsresolution.html\");\nxhr.send();\nvar text = responseText;\n//text sabuer machen\nvar text = text.replaceAll(/@^()[]%\\n\\d\\r\\t,.\"'#_-`'!&#123;&#125;/g, \" \")\n.split(\" \").trim().filter(x => !Stoppworte.includes(x) && x !== \"\");\n\n\nvar anzahlWord = &#123;&#125;;\n\n\ntext.forEach(word => &#123;\nanzahlWord[word] = anzahlWord[word] ? anzahlWord[word] + 1 : 1;\n     &#125;);\n\nvar Begriffe =bject.keys(arg).sort(function (a, b) &#123;\n    return arg[a] - arg[b]\n  &#125;);\n\n  console.log(\"die 3 häufigsten Begriffe sind = \"+ Object.values(woerter).slice(Object.values(alleWoerter).length-3));\n\n\n\n</pre>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-Ex92',\n  templateUrl: './Ex92.component.html',\n  styleUrls: ['./Ex92.component.scss']\n})\nexport class Ex92Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"middlepane\">\n    <div id=\"aufgabe\">\n      <h1>9.2. Statistik-Balkendiagramm in SVG</h1>\n      <p><b>Implementieren Sie ein eigenes Balkendiagramm mit HTML, Inline SVG, CSS und JavaScript. Geben Sie die Daten\n          für\n          das Balkendiagramm im JSON-Format vor.\n          Nehmen Sie als Beispieldaten\n          die <a href=\"https://www.rki.de/DE/Content/InfAZ/N/Neuartiges_Coronavirus/Fallzahlen.html\"\n            target=\"_blank\">COVID-19: Fallzahlen in Deutschland</a>. Animieren Sie die Grafik (siehe z.B. <a\n            href=\"https://www.highcharts.com/demo/bar-basic\" target=\"_blank\">Highchart Bar Chart</a>).</b></p>\n      <p>Geben Sie hier eine ablauffähige HTML-Seite inklusive SVG-Code ein: </p>\n      <p><b>QUELLCODE:</b> </p>\n      <pre>&lt;!DOCTYPE html>\n        &lt;html lang=\"en\">\n        &lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js\">&lt;/script>\n        &lt;canvas id=\"myChart\" style=\"width:100%;max-width:700px\">&lt;/canvas>\n        &lt;script>\n        var myChart = new Chart(\"myChart\", &#123;\n            type: \"bar\",\n            data: &#123;&#125;,\n            options: &#123;&#125;\n          &#125;);\n          var xValues = [\"Baden-Württem­berg\", \"Bayern\", \"Berlin\", \"Branden­burg\",\"Bremen\",\"Hamburg\",\"Nord­rhein-West­falen\",\"Sachsen\"];\n        var yValues = [880657, 1191561 , 285058, 192271, 40950, 118126, 1221048 ,544655];\n        var barColors = [\"red\", \"green\",\"blue\",\"orange\",\"yellow\",\"pink\",\"gray\",\"brown\"];\n        \n        new Chart(\"myChart\", &#123;\n          type: \"bar\",\n          data: &#123;\n            labels: xValues,\n            datasets: [&#123;\n              backgroundColor: barColors,\n              data: yValues\n            &#125;]\n          &#125;,options: &#123;\n          \n              legend: &#123;display: false&#125;,\n        \n            title: &#123;\n              display: true,\n              text: \"Fallzahlen in Deutschland\",\n        \n            &#125;\n          &#125;\n        &#125;);\n        &lt;/script>\n        \n        &lt;body>\n            \n        &lt;/body>\n        &lt;/html>\n          </pre>\n\n    </div>\n  </div>\n  <div class=\"rightpane\">\n    <p id=\"ausfuhren\"> QUELLCODE AUSFÜHREN</p>\n    <a class=\"execute\" href=\"assets/loesung 9.2.html\" target=\"_blank\">klicken SIE HIER BITTE !</a>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-Ex44',\n  templateUrl: './Ex44.component.html',\n  styleUrls: ['./Ex44.component.scss']\n})\nexport class Ex44Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"middlepane\">\n    <div id=\"aufgabe\">\n      <h1>Aufgabe 4.4. Topsort</h1>\n      <p><b><code>[ [\"schlafen\", \"studieren\"], [\"essen\", \"studieren\"], [\"studieren\", \"prüfen\"] ]</code>In jedem Projekt\n          fallen Aufgaben (Tasks) an. Zwischen den Aufgaben gibt es paarweise Abhängigkeiten. Z.B. kann Task2 von Task1\n          abhängen, d.h. erst muss Task1 fertig sein, bevor Task2 starten kann, weil es dessen Ergebnisse benötigt.\n          Tasks\n          können auch unabhängig voneinander sein und parallel ablaufen. In JavaScript können Sie die Abhängigkeiten in\n          Arrays codieren, z.B. kann man bei nicht prüfen, ohne vorher gegessen zu haben. Transitive Abhängigkeiten\n          müssen\n          also berücksichtigt werden.</b></p>\n      <p>Schreiben Sie in JavaScript eine Funktion<code> topsort()</code>, die eine <a\n          href=\"https://de.wikipedia.org/wiki/Topologische_Sortierung\" target=\"_blank\">topologische Sortierung</a>\n        berechnet. Topologische Sortierung ist eine Form von Sortierung. Sie kennen die Funktion Array.prototype.sort()\n        und\n        wissen, was als Ergebnis erwartet wird, nämlich eine sortiere Liste. Genauso ist das hier. Die Funktion\n        topsort()\n        soll eine sortierte Liste ausgeben, die keine der eingegebenen Abhängigkeiten verletzt.\n        Achten Sie auf Performanz. Berechnen Sie die topologische Sortierung in linearer Zeit (Average Case).</p>\n\n      <p>QUELLCODE:</p>\n      <pre> &lt;!DOCTYPE html>\n        &lt;html>\n        &lt;head>\n        &lt;meta charset=\"UTF-8\"/>\n        &lt;/head>\n        &lt;body>\n        &lt;div id=\"sortedArray\">&lt;/div>\n        &lt;script>\n        \n        document.getElementById(\"sortedArray\").innerHTML = topsort([ [\"schlafen\", \"studieren\"], [\"essen\", \"studieren\"], [\"studieren\", \"prüfen\"] ])\n        \n        function topsort(array) &#123;\n               var length = 0, finalArray = [], listPred = &#123;&#125;;\n        \n                for(var i in array) &#123;\n                        if(listPred[array[i][0]] == null) &#123;\n                                listPred[array[i][0]] = 0;\n                                length++; &#125;\n                        \n                        if(listPred[array[i][1]] == null) &#123;\n                                listPred[array[i][1]] = 1;\n                                length++;&#125; else &#123;\n                                listPred[array[i][1]]++;\n                      &#125;\n              &#125;\n                \n              while(length > 0) &#123;\n                     for(var i in listPred) &#123;\n                                if(listPred[i] == 0) &#123;\n                                  finalArray.push(i);  \n                                  for(var j in array) &#123;\n                                        if(array[j][0] === i) &#123;\n                                              listPred[array[j][1]]--; &#125;\n                                        &#125;\n                                        \n                                        delete listPred[i];\n                                        length--;\n                              &#125;\n                      &#125;\n               &#125;\n                \n                return finalArray;\n        &#125;\n        &lt;/script>\n        &lt;/body>\n        &lt;/html>\n        \n        \n        </pre>\n      <p><b>Testen Sie Ihren JavaScript-Code. Verwenden Sie für Ihre Tests die Funktion<a\n            href=\"https://developer.mozilla.org/de/docs/Web/API/Console/assert\" target=\"_blank\"> console.assert</a>.\n          Geben\n          Sie hier Ihre Tests ein</b></p>\n\n      <p>QUELLCODE:</p>\n      <pre> <br>\nvar array = [ [\"schlafen\", \"studieren\"], [\"essen\", \"studieren\"], [\"studieren\", \"prüfen\"]];\n \nconsole.assert(topSort(array) === [ \"schlafen\", \"essen\", \"studieren\", \"prüfen\"], \"Richtige Ergebnisse\");\n<br>\n</pre>\n    </div>\n  </div>\n\n\n  <div class=\"rightpane\">\n    <p id=\"ausfuhren\"> QUELLCODE AUSFÜHREN</p>\n    <a class=\"execute\" href=\"assets/loesung 4.4.html\" target=\"_blank\">klicken SIE HIER BITTE !\n    </a>\n  </div>\n</div>\n","import { AboutMeComponent } from './exercice/aboutMe/aboutMe.component';\r\nimport { Ex65Component } from './exercice/Ex65/Ex65.component';\r\nimport { Ex113Component } from './exercice/Ex113/Ex113.component';\r\nimport { Ex112Component } from './exercice/Ex112/Ex112.component';\r\nimport { Ex111Component } from './exercice/Ex111/Ex111.component';\r\nimport { Ex103Component } from './exercice/Ex103/Ex103.component';\r\nimport { Ex102Component } from './exercice/Ex102/Ex102.component';\r\nimport { Ex101Component } from './exercice/Ex101/Ex101.component';\r\nimport { Ex92Component } from './exercice/Ex92/Ex92.component';\r\nimport { Ex91Component } from './exercice/Ex91/Ex91.component';\r\nimport { Ex82Component } from './exercice/Ex82/Ex82.component';\r\nimport { Ex81Component } from './exercice/Ex81/Ex81.component';\r\nimport { Ex72Component } from './exercice/Ex72/Ex72.component';\r\nimport { Ex71Component } from './exercice/Ex71/Ex71.component';\r\nimport { Ex64Component } from './exercice/Ex64/Ex64.component';\r\nimport { Ex63Component } from './exercice/Ex63/Ex63.component';\r\nimport { Ex62Component } from './exercice/Ex62/Ex62.component';\r\nimport { Ex61Component } from './exercice/Ex61/Ex61.component';\r\nimport { Ex53Component } from './exercice/Ex53/Ex53.component';\r\nimport { Ex51Component } from './exercice/Ex51/Ex51.component';\r\nimport { Ex44Component } from './exercice/Ex44/Ex44.component';\r\nimport { Ex43Component } from './exercice/Ex43/Ex43.component';\r\nimport { Ex42Component } from './exercice/Ex42/Ex42.component';\r\nimport { Ex41Component } from './exercice/Ex41/Ex41.component';\r\nimport { Ex33Component } from './exercice/Ex33/Ex33.component';\r\nimport { Ex31Component } from './exercice/Ex31/Ex31.component';\r\nimport { Ex23Component } from './exercice/Ex23/Ex23.component';\r\nimport { Ex22Component } from './exercice/Ex22/Ex22.component';\r\nimport { Ex21Component } from './exercice/Ex21/Ex21.component';\r\nimport { Ex14Component } from './exercice/Ex14/Ex14.component';\r\nimport { Ex13Component } from './exercice/Ex13/Ex13.component';\r\nimport { Ex12Component } from './exercice/Ex12/Ex12.component';\r\nimport { Sheet1Ex1Component } from './exercice/sheet1Ex1/sheet1Ex1.component';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ExerciceComponent } from './exercice/exercice.component';\r\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\r\nimport { TasksComponent } from './tasks/tasks.component';\r\nimport { SolutionComponent } from './solution/solution.component';\r\nimport { BodyComponent } from './body/body.component';\r\nimport { Ex32Component } from './exercice/Ex32/Ex32.component';\r\nimport { Ex52Component } from './exercice/Ex52/Ex52.component';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [\t\t\t\t\t\t\r\n    AppComponent,\r\n    ExerciceComponent,\r\n      NavBarComponent,\r\n      TasksComponent,\r\n      SolutionComponent,\r\n      BodyComponent,\r\n      Sheet1Ex1Component,\r\n      Ex12Component,\r\n      Ex13Component,\r\n      Ex14Component,\r\n      Ex21Component,\r\n      Ex22Component,\r\n      Ex23Component,\r\n      Ex31Component,\r\n      Ex32Component,\r\n      Ex33Component,\r\n      Ex41Component,\r\n      Ex42Component,\r\n      Ex43Component,\r\n      Ex44Component,\r\n      Ex51Component,\r\n      Ex52Component,\r\n      Ex53Component,\r\n      Ex61Component,\r\n      Ex62Component,\r\n      Ex63Component,\r\n      Ex64Component,\r\n      Ex65Component,\r\n      Ex71Component,\r\n      Ex72Component,\r\n      Ex81Component,\r\n      Ex82Component,\r\n      Ex91Component,\r\n      Ex92Component,\r\n      Ex101Component,\r\n      Ex102Component,\r\n      Ex103Component,\r\n      Ex111Component,\r\n      Ex112Component,\r\n      Ex113Component,\r\n      AboutMeComponent\r\n\r\n   ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-Ex64',\n  templateUrl: './Ex64.component.html',\n  styleUrls: ['./Ex64.component.scss']\n})\nexport class Ex64Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div id=\"aufgabe\">\n  <h1>6.4. Proxy</h1>\n  <p><b>Erweitern Sie Ihre Vorrang-Klasse um Logging, indem Sie ein <a\n        href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy\"\n        target=\"_blank\">Proxy </a>einfügen. Lassen Sie sich vom Logger bei jedem Schritt ausgeben, wie viele der\n      Vorrangrelationen noch übrig bleiben.\n      Verwenden Sie so weit wie möglich High-Level-Methoden wie<a\n        href=\"https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\"\n        target=\"_blank\"> Object.keys </a>und High-Level-Datenstrukturen wie Map und Set und deren Methoden, anstatt\n      mühsam von Hand zu\n      iterieren und zu zählen. </b></p>\n  <p>Geben Sie die HTML-Seite inkl. ES6-Code inkl. Tests hier ein. Verwenden Sie für Ihre Tests die Funktion <a\n      href=\"https://developer.mozilla.org/de/docs/Web/API/Console/assert\" target=\"_blank\">console.assert</a>. </p>\n  <p><b>QUELLCODE:</b></p>\n  <pre>\n\tfunction topsort(array) &#123;\n\n\n    var Knoten = [];\n    var pack = [];\n    var gesehen = [];\n\n    for (var k = 0; k &lt; array.length; k++) &#123;\n        if (Knoten.indexOf(array[k][0]) &lt; 0) Knoten.push(array[k][0]);\n        if (Knoten.indexOf(array[k][1]) &lt; 0) Knoten.push(array[k][1]);\n    &#125;\n\n    Knoten.forEach(function (knote) &#123;\n        if (gesehen.indexOf(knote) &lt; 0) &#123;\n            sort(knote);\n        &#125;\n    &#125;);\n\n    function sort(knote) &#123;\n        gesehen.push(knote);\n        array.forEach(function (Kante) &#123;\n            if (gesehen.indexOf(Kante[1]) &lt; 0 && Kante[0] == knote) &#123;\n                sort(Kante[1]);\n            &#125;\n        &#125;);\n        pack.push(knote);\n    &#125;\n    return pack.reverse();\n&#125;\n\nclass Vorrang &#123;\n    [Symbol.iterator]() &#123;\n        return this.array.values()\n    &#125;\n    constructor(array) &#123;\n        this.array = topsort(array);\n    &#125;\n\n\n&#125;\n\n\n\ntry &#123;\n\n    var text = \"schlafen,studieren,essen,studieren,studieren,prüfen\";\n    console.log(text);\n\n    var array = text.split(\",\").map(String);\n    if ((array.length % 2) != 0) &#123;\n        throw new Error(' Geben Sie bitte eine Komplette Vorrangrelationen');\n    &#125;\n\n    var gfg = new Array(array.length / 2);\n\n\n    // Loop to create 2D array using 1D array\n    for (var i = 0; i &lt; gfg.length; i++) &#123;\n        gfg[i] = new Array(2);\n    &#125;\n\n    var h = 0;\n\n    // Loop to initialize 2D array elements.\n    for (let i = 0; i &lt; array.length / 2; i++) &#123;\n        for (let j = 0; j &lt; 2; j++) &#123;\n            gfg[i][j] = array[h++];\n        &#125;\n    &#125;\n\n    const studentenLeben = new Vorrang(gfg);\n\n    var final = [];\n    for (const next of studentenLeben) &#123;\n        final.push(next);\n    &#125;\n\n    console.log(final);\n\n&#125; catch (err) &#123;\n\n    console.log(err.message);\n&#125;\n\n\n\n\nconst studentenLeben = new Vorrang([\n    [\"schlafen\", \"studieren\"],\n    [\"essen\", \"studieren\"],\n    [\"studieren\", \"prüfen\"]\n]);\n\n//TEST\nconst arrayTest = new Vorrang([\n    [\"schlafen\", \"studieren\"],\n    [\"essen\", \"studieren\"],\n    [\"studieren\", \"prüfen\"]\n]);\nvar arrayfinal = [];\nfor (const next of arrayTest) &#123;\n    arrayfinal.push(next);\n&#125;\nvar ausgabe = [\"schlafen\", \"essen\", \"studieren\", \"prüfen\"];\nfor (let i = 0; i &lt; arrayfinal.length; i++) &#123;\n\n    console.assert(ausgabe[i] === arrayfinal[i], `diese beide Werte $&#123;ausgabe[i]&#125; und $&#123;arrayfinal[i]&#125; sind nicht gleich`);\n&#125;\n\n\n//Proxy\n\nconst generator = new Proxy(studentenLeben.gen, &#123;\n    apply(target, thisArg, argumentList) &#123;\n        console.log(studentenLeben.getSize());\n        return target(studentenLeben);\n    &#125;\n&#125;);\n\nwhile (true) &#123;\n    tab = generator().next();\n    if (tab[\"done\"] !== false) &#123;\n        break;\n    &#125;\n    console.assert(final.includes(out[\"value\"]));\n    console.assert(ausgabe[0] === out[\"value\"]);\n    testArraySequence.splice(0, 1);\n&#125; \n\t</pre>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-Ex13',\n  templateUrl: './Ex13.component.html',\n  styleUrls: ['./Ex13.component.scss']\n})\nexport class Ex13Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"middlepane\">\n    <div id=\"aufgabe\">\n      <h1>1.3. HTML-Literatur lesen und Fragen beantworten</h1>\n      <p><b>Arbeiten Sie ein HTML-Tutorial durch ( <a href=\"https://www.w3schools.com/html/default.asp\"\n            target=\"_blank\">W3\n            Schools</a> oder <a href=\"https://wiki.selfhtml.org/wiki/HTML/Tutorials/HTML-Einstieg\"\n            target=\"_blank\">selfhtml</a> ) und beantworten Sie dazu folgende Fragen: </b></p>\n      <p><b>Was ist HTML?</b></p>\n      <p>HTML ist HyperText Markup Sprache für Webseiten.</p>\n      <hr>\n      <p><b>Wie kann man eine geschachtelte geordnete Liste der Schachtelungstiefe 3 erzeugen? </b></p>\n      <pre>\n&lt;!DOCTYPE html>\n&lt;html>\n&lt;body>\n\n&lt;h2>geschachtelte geordnete &lt;/h2>\n&lt;p>List:&lt;/p>\n\n&lt;ol>\n &lt;li>Erste Element&lt;/li>\n &lt;li>Zweite Element\n  &lt;ol>\n    &lt;li>Schachtelungstiefe 1&lt;/li>\n    &lt;ol>\n    &lt;li>Schachtelungstiefe 2&lt;/li>\n\t&lt;/ol>\n   &lt;/ol>\n &lt;/li>\n &lt;li>Dritte Element&lt;/li>\n&lt;/ol>\n\n&lt;/body>\n&lt;/html>\n</pre>\n      <hr>\n\n      <p><b>Wie ist eine HTML-Tabelle aufgebaut? </b></p>\n      <pre>\n&lt;table >\n  &lt;tr>\n    &lt;th>Titel 1&lt;/th>\n    &lt;th>Titel 2&lt;/th>\n  &lt;/tr>\n  &lt;tr>\n    &lt;td>Element des Titel 1&lt;/td>\n    &lt;td>Element des Titel 2&lt;/td>\n  &lt;/tr>\n  &lt;tr>\n     &lt;td>Element des Titel 1&lt;/td>\n    &lt;td>Element des Titel 2&lt;/td>\n  &lt;/tr>\n&lt;/table>\n</pre>\n      <hr>\n\n      <p><b>Welche Konventionen sollte man bei Pfaden und Dateinamen beachten?</b></p>\n      <p>Es gibt spezielle Zeichen, die nicht verwendet werden dürfen, weil sie im Dateisystem eine Bedeutung haben.\n        Dazu\n        gehören der Doppelpunkt und die Schrägstriche / und \\ als Trennzeichen für Laufwerksbuchstaben und Ordner, und\n        die\n        Zeichen * und ? als Jokerzeichen in der Dateisuche. </p>\n      <hr>\n      <p><b>Wie baut man in HTML ein Menü?</b></p>\n      <pre>\n&lt;div class=\"menu\">\n  &lt;a href=\"#\" class=\"active\">Home&lt;/a>\n  &lt;a href=\"#\">link 1&lt;/a>\n  &lt;a href=\"#\">Link 2&lt;/a>\n  &lt;a href=\"#\">Link 3&lt;/a>\n  &lt;a href=\"#\">Link 4&lt;/a>\n&lt;/div>\n</pre>\n      <hr>\n      <p><b>Welche Attribute sollte man bei Bildern wie verwenden?</b></p>\n      <p>src attribute specifies the path (URL) to the image. alt attribute should describe the image. style,width and\n        height attribute to specify the width and height of an image.</p>\n    </div>\n  </div>\n\n\n\n\n  <div class=\"rightpane\">\n    <p id=\"ausfuhren\"> QUELLCODE AUSFÜHRUNG</p>\n    <div class=\"Seite_html\">\n      <!DOCTYPE html>\n      <html>\n\n      <head>\n        <title>execute A1 E3 F1</title>\n\n\n      </head>\n\n      <body>\n\n        <h2>geschachtelte geordnete </h2>\n        <p>List:</p>\n\n        <ol>\n          <li>Erste Element</li>\n          <li>Zweite Element\n            <ol>\n              <li>Schachtelungstiefe 1</li>\n              <ol>\n                <li>Schachtelungstiefe 2</li>\n              </ol>\n            </ol>\n          </li>\n          <li>Dritte Element</li>\n        </ol>\n\n      </body>\n\n      </html>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-Ex31',\n  templateUrl: './Ex31.component.html',\n  styleUrls: ['./Ex31.component.scss']\n})\nexport class Ex31Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"middlepane\">\n    <div id=\"aufgabe\">\n      <h1>Aufgabe 3.1. Responsiv mit Flexbox Desktop-First</h1>\n      <p><b>Spielen Sie zunächst das Flexbox <a href=\"http://flexboxfroggy.com/#de\" target=\"_blank\">\"Froggy-Spiel\"</a>,\n          um\n          Flexbox zu lernen.</b></p>\n      <p> Implementieren Sie dann ausschließlich mit HTML und CSS Flexbox folgendes responsive Webdesign nach der\n        Desktop-First-Strategie! </p>\n      <img src=\"https://kaul.inf.h-brs.de/we/assets/img/holy-grail1.png\" style=\"max-width:400px;width:100%\">\n      <p><b>QUELLCODE:</b> </p>\n      <pre> &lt;!DOCTYPE html>\n        &lt;html>\n        &lt;head>\n        &lt;meta charset=\"ISO-8859-1\">\n        &lt;title>Insert title here&lt;/title>\n        &lt;/head>\n        &lt;style>\n        \n        *, ::after, ::before &#123;\n          box-sizing: border-box;\n        &#125;\n        \n         \n        \n        .container &#123;\n          \n          max-width: 1400px; \n          display: flex;\n          flex-wrap: wrap;\n        &#125;\n        \n        .column &#123;\n          --columns: 12; \n        \n          --width: 0; \n            \n          border: LavenderBlush 5px solid;\n          border-radius: 20px;\n          padding: 16px;\n          flex-basis: calc(var(--width) / var(--columns) * 100%);\n        &#125;\n        \n        @media screen and (max-width: 800px) &#123;\n           aside.rechts &#123; --width: 12; height: 10rem; &#125;\n           nav.nav &#123;  --width: 10;   &#125;\n              main.links &#123;  --width: 2;   &#125;\n           \n           &#125;\n          \n        @media screen and (max-width:600px) &#123;\n           nav.nav &#123; --width: 12;  &#125;\n           main.links &#123; --width:6; height:20rem; &#125;\n           aside.rechts &#123; --width:6; height:20rem; &#125;\n           nav.nav &#123; order: 1; &#125;\n           main.links &#123; order: 2; &#125;\n           aside.rechts &#123; order: 3; &#125;\n           \n        &#125;\n        \n        \n        .header &#123;\n          --width: 12;\n            height: 8rem;\n            background-color: red;\n          \n        &#125;\n        \n        .links &#123;\n          --width: 2.5;\n          height: 64rem;\n            background-color: pink;\n          \n        &#125;\n        \n        .nav &#123;\n          --width: 7;\n              background-color: blue;\n            height: 64rem;\n          \n        &#125;\n        \n        .rechts &#123;\n          --width: 2.5;\n             background-color: lightgreen ;\n            height: 64rem;\n          \n        &#125;\n        \n        \n        \n        &lt;/style>\n        \n        &lt;body>\n        \n        \n          &lt;div class=\"container\">\n            &lt;header class=\"header column\">  &lt;/header>\n            &lt;main class=\"links column\">  &lt;/main>\n                &lt;nav class=\"nav column\">  &lt;/nav>\n            \n            &lt;aside class=\"rechts column\">&lt;/aside>\n          &lt;/div>\n        \n        \n        &lt;/body>\n        &lt;/html>\n          </pre>\n    </div>\n  </div>\n  <div class=\"rightpane\">\n    <p id=\"ausfuhren\"> QUELLCODE AUSFÜHRUNG</p>\n    <div class=\"Seite_html\">\n\n      <body class=\"body\">\n        <header></header>\n        <main></main>\n        <aside class=\"left\"></aside>\n        <aside class=\"right\"></aside>\n      </body>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-Ex14',\n  templateUrl: './Ex14.component.html',\n  styleUrls: ['./Ex14.component.scss']\n})\nexport class Ex14Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"middlepane\">\n\n    <h1 id=\"ub\">1.4. HTML Wireframe</h1>\n    <p><b>Gegeben ist folgendes HTML-Wireframe:</b></p>\n    <img src=\"https://kaul.inf.h-brs.de/we/assets/img/wireframe01.jpg\" style=\"max-width:400px;width:100%\">\n    <p> Mit welchem HTML-Code (ohne CSS, nur mit HTML-Tags) kann man diesen Wireframe exakt nachbilden?\n      <p>Die beiden Bilder finden Sie z.B. unter<a href=\"https://kaul.inf.h-brs.de/we/assets/img/tbl.jpg\"\n          target=\"_blank\"> TBL </a>und <a href=\"https://kaul.inf.h-brs.de/we/assets/img/eich.jpg\" target=\"_blank\">\n          Eich.</a> </p>\n      <p><b>QUELLCODE:</b> </p>\n      <pre>\n\n  &lt;!DOCTYPE html>\n  &lt;html>\n  &lt;body>\n  \n  &lt;h1 >Übung1.2: Inventors of the Web&lt;/h1>\n  &lt;ul  >\n    &lt;li> &lt;b>&lt;u>&lt;mark> Tim Berners-Lee:&lt;/mark>&lt;/u>&lt;/b> WWW,HTTP,HTML,URI &lt;/li>\n    &lt;li>&lt;b>Hakom lie and Bert Bos:&lt;/b>CSS&lt;/li>\n    &lt;li>&lt;b>Brendan Eich:&lt;/b>JavaScript&lt;/li>\n  &lt;/ul>  \n  &lt;hr>\n  &lt;h2>Inventors of the WWW&lt;/h2>\n\n  &lt;table  border=\"10\"  cellpadding=\"3\" align=\"center\" >\n   &lt;thead>\n    &lt;th  colspan=\"4\"> Inventors of the Web  &lt;/th>\n  &lt;/thead>\n  &lt;tr>\n    &lt;th>WWW&lt;/th>\n    &lt;th>HTML&lt;/th>\n    &lt;th>CSS&lt;/th>\n    &lt;th>JavaScript&lt;/th>\n\n  &lt;/tr>\n  &lt;tr>\n    &lt;td bgcolor=\"yellow\">&lt;b>Tim Berners-Lee&lt;/b>&lt;/td>\n    &lt;td bgcolor=\"yellow\">&lt;b>Tim Berners-Lee&lt;/b>&lt;/td>\n    &lt;td>Hakom lie and Bert Bos&lt;/td>\n    &lt;td>Brendan Eich &lt;/td>\n\n  &lt;/tr>\n &lt;/table>\n &lt;hr>\n\n\n\n &lt;table  >\n  &lt;tr>\n    &lt;th colspan=\"2\" >&lt;font size=\"5pt\">&lt;u>Inventors of the WWW&lt;/u> &lt;/th> \n  &lt;/tr>\n\n  &lt;tr>  \n    &lt;th>HTML&lt;/th>\n    &lt;th>JavaScript  &lt;/th>\n  &lt;/tr>\n  &lt;tr>\n    &lt;td >&lt;img src=\"https://kaul.inf.h-brs.de/we/assets/img/tbl.jpg\">&lt;/td>\n    &lt;td>&lt;img src=\"https://kaul.inf.h-brs.de/we/assets/img/eich.jpg\">&lt;/td>\n  &lt;/tr>\n  &lt;tr>\n    &lt;td>Tim Berners-Lee&lt;/td>\n    &lt;td>Brendan Eich &lt;/td>\n  &lt;/tr>\n &lt;/table>\n\n &lt;/body>\n &lt;/html>\n\n\n\t</pre>\n\n  </div>\n\n\n  <div class=\"rightpane\">\n    <p id=\"ausfuhren\"> QUELLCODE AUSFÜHRUNG</p>\n    <div class=\"Seite_html\">\n      <h1>Übung1.2: Inventors of the Web</h1>\n      <ul>\n        <li> <b><u><mark> Tim Berners-Lee:</mark></u></b> WWW,HTTP,HTML,URI </li>\n        <li><b>Hakom lie and Bert Bos:</b>CSS</li>\n        <li><b>Brendan Eich:</b>JavaScript</li>\n      </ul>\n      <hr>\n      <h2>Inventors of the WWW</h2>\n\n      <table cellpadding=\"3\">\n        <thead>\n          <th colspan=\"4\"> Inventors of the Web </th>\n        </thead>\n        <tr>\n          <th>WWW</th>\n          <th>HTML</th>\n          <th>CSS</th>\n          <th>JavaScript</th>\n\n        </tr>\n        <tr>\n          <td><b>Tim Berners-Lee</b></td>\n          <td><b>Tim Berners-Lee</b></td>\n          <td>Hakom lie and Bert Bos</td>\n          <td>Brendan Eich </td>\n\n        </tr>\n      </table>\n      <hr>\n      <table>\n        <tr>\n          <th colspan=\"2\"><u>Inventors of the WWW</u> </th>\n        </tr>\n\n        <tr>\n          <th>HTML</th>\n          <th>JavaScript </th>\n        </tr>\n        <tr>\n          <td><img src=\"https://kaul.inf.h-brs.de/we/assets/img/tbl.jpg\"></td>\n          <td><img src=\"https://kaul.inf.h-brs.de/we/assets/img/eich.jpg\"></td>\n        </tr>\n        <tr>\n          <td>Tim Berners-Lee</td>\n          <td>Brendan Eich </td>\n        </tr>\n      </table>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, Output } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-exercice',\n  templateUrl: './exercice.component.html',\n  styleUrls: ['./exercice.component.css'],\n})\nexport class ExerciceComponent implements OnInit {\n  @Output() sheet1: boolean;\n  @Output() sheet2: boolean;\n  @Output() sheet3: boolean;\n  @Output() sheet4: boolean;\n  @Output() sheet5: boolean;\n  @Output() sheet6: boolean;\n  @Output() sheet7: boolean;\n  @Output() sheet8: boolean;\n  @Output() sheet9: boolean;\n  @Output() sheet10: boolean;\n  @Output() sheet11: boolean;\n\n  constructor(private _router: Router) {}\n\n  ngOnInit() {\n    this.sheet1 = true;\n    this._router.navigate(['exercice/aboutMe']);\n  }\n\n  sheet1clicked() {\n    this.sheet1 = true;\n    this.sheet2 = false;\n    this.sheet3 = false;\n    this.sheet4 = false;\n    this.sheet5 = false;\n    this.sheet6 = false;\n    this.sheet7 = false;\n    this.sheet8 = false;\n    this.sheet9 = false;\n    this.sheet10 = false;\n    this.sheet11 = false;\n  }\n\n  sheet2clicked() {\n    this.sheet1 = false;\n    this.sheet2 = true;\n    this.sheet3 = false;\n    this.sheet4 = false;\n    this.sheet5 = false;\n    this.sheet6 = false;\n    this.sheet7 = false;\n    this.sheet8 = false;\n    this.sheet9 = false;\n    this.sheet10 = false;\n    this.sheet11 = false;\n  }\n\n  sheet3clicked() {\n    this.sheet1 = false;\n    this.sheet2 = false;\n    this.sheet3 = true;\n    this.sheet4 = false;\n    this.sheet5 = false;\n    this.sheet6 = false;\n    this.sheet7 = false;\n    this.sheet8 = false;\n    this.sheet9 = false;\n    this.sheet10 = false;\n    this.sheet11 = false;\n  }\n\n  sheet4clicked() {\n    this.sheet1 = false;\n    this.sheet2 = false;\n    this.sheet3 = false;\n    this.sheet4 = true;\n    this.sheet5 = false;\n    this.sheet6 = false;\n    this.sheet7 = false;\n    this.sheet8 = false;\n    this.sheet9 = false;\n    this.sheet10 = false;\n    this.sheet11 = false;\n  }\n\n  sheet5clicked() {\n    this.sheet1 = false;\n    this.sheet2 = false;\n    this.sheet3 = false;\n    this.sheet4 = false;\n    this.sheet5 = true;\n    this.sheet6 = false;\n    this.sheet7 = false;\n    this.sheet8 = false;\n    this.sheet9 = false;\n    this.sheet10 = false;\n    this.sheet11 = false;\n  }\n\n  sheet6clicked() {\n    this.sheet1 = false;\n    this.sheet2 = false;\n    this.sheet3 = false;\n    this.sheet4 = false;\n    this.sheet5 = false;\n    this.sheet6 = true;\n    this.sheet7 = false;\n    this.sheet8 = false;\n    this.sheet9 = false;\n    this.sheet10 = false;\n    this.sheet11 = false;\n  }\n\n  sheet7clicked() {\n    this.sheet1 = false;\n    this.sheet2 = false;\n    this.sheet3 = false;\n    this.sheet4 = false;\n    this.sheet5 = false;\n    this.sheet6 = false;\n    this.sheet7 = true;\n    this.sheet8 = false;\n    this.sheet9 = false;\n    this.sheet10 = false;\n    this.sheet11 = false;\n  }\n\n  sheet8clicked() {\n    this.sheet1 = false;\n    this.sheet2 = false;\n    this.sheet3 = false;\n    this.sheet4 = false;\n    this.sheet5 = false;\n    this.sheet6 = false;\n    this.sheet7 = false;\n    this.sheet8 = true;\n    this.sheet9 = false;\n    this.sheet10 = false;\n    this.sheet11 = false;\n  }\n\n  sheet9clicked() {\n    this.sheet1 = false;\n    this.sheet2 = false;\n    this.sheet3 = false;\n    this.sheet4 = false;\n    this.sheet5 = false;\n    this.sheet6 = false;\n    this.sheet7 = false;\n    this.sheet8 = false;\n    this.sheet9 = true;\n    this.sheet10 = false;\n    this.sheet11 = false;\n  }\n\n  sheet10clicked() {\n    this.sheet1 = false;\n    this.sheet2 = false;\n    this.sheet3 = false;\n    this.sheet4 = false;\n    this.sheet5 = false;\n    this.sheet6 = false;\n    this.sheet7 = false;\n    this.sheet8 = false;\n    this.sheet9 = false;\n    this.sheet10 = true;\n    this.sheet11 = false;\n  }\n\n  sheet11clicked() {\n    this.sheet1 = false;\n    this.sheet2 = false;\n    this.sheet3 = false;\n    this.sheet4 = false;\n    this.sheet5 = false;\n    this.sheet6 = false;\n    this.sheet7 = false;\n    this.sheet8 = false;\n    this.sheet9 = false;\n    this.sheet10 = false;\n    this.sheet11 = true;\n  }\n}\n","<div class=\"container\">\r\n  <div class=\"toppane\">\r\n    <button routerLink=\"/exercice/aboutMe\" class=\"aboutme\">➥About Me !</button>\r\n    <img src=\"https://upload.wikimedia.org/wikipedia/commons/8/83/HochschuleB-R-S.svg\" id=\"logo\" />\r\n    <h1 id=\"title1\">Einführung in\r\n      Web Engineering </h1>\r\n  </div>\r\n\r\n  <div class=\"toppanedown\">\r\n    <button (click)=\"sheet1clicked()\" class=\"navbt\">1.Einführung</button>\r\n    <button (click)=\"sheet2clicked()\" class=\"navbt\">2.CSS Teil I</button>\r\n    <button (click)=\"sheet3clicked()\" class=\"navbt\">3.CSS Teil II</button>\r\n    <button (click)=\"sheet4clicked()\" class=\"navbt\">4.JavaScript</button>\r\n    <button (click)=\"sheet5clicked()\" class=\"navbt\">5.DOM</button>\r\n    <button (click)=\"sheet6clicked()\" class=\"navbt\">6.ECMAScript</button>\r\n    <button (click)=\"sheet7clicked()\" class=\"navbt\">7.Functional</button>\r\n    <button (click)=\"sheet8clicked()\" class=\"navbt\">8.Async</button>\r\n    <button (click)=\"sheet9clicked()\" class=\"navbt\">9.SVG</button>\r\n    <button (click)=\"sheet10clicked()\" class=\"navbt\">10.TypeScript</button>\r\n    <button (click)=\"sheet11clicked()\" class=\"navbt\">11.1 PHP</button>\r\n  </div>\r\n  <div class=\"leftpane\">\r\n    <app-nav-bar [sheet1]=\"sheet1\" [sheet2]=\"sheet2\" [sheet3]=\"sheet3\" [sheet4]=\"sheet4\" [sheet5]=\"sheet5\"\r\n      [sheet6]=\"sheet6\" [sheet7]=\"sheet7\" [sheet8]=\"sheet8\" [sheet9]=\"sheet9\" [sheet10]=\"sheet10\" [sheet11]=\"sheet11\">\r\n    </app-nav-bar>\r\n  </div>\r\n  <div class=\"rightpane\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-Ex42',\n  templateUrl: './Ex42.component.html',\n  styleUrls: ['./Ex42.component.scss']\n})\nexport class Ex42Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div id=\"aufgabe\">\n  <h1>Aufgabe 4.2. Objekte</h1>\n  <p><b>Schreiben Sie die Prototypen Person und Auto in JavaScript, so dass jede Person weiß, welche Autos sie besitzt.\n      Schreiben Sie eine Funktion<code> conflict()</code>, die feststellt, ob ein Auto von mehr als einer Person\n      besessen wird.</b></p>\n\n  <p>QUELLCODE:</p>\n  <pre>\n    function Person(name, autos) &#123;\n        this.name = name;\n        this.autos = autos;\n    &#125;\n    \n    function Auto(matrikel) &#123;\n        this.matrikel = matrikel;\n    &#125;\n    \n    function conflict(listPersons, auto) &#123;\n        var besitzer = 0;\n        listPersons.forEach((per)=>&#123;\n           if (per.autos.includes(auto.matrikel)) &#123;\n               besitzer++;\n           &#125;\n        &#125;)  \n    \n        if(besitzer > 1) \n        console.log(\"Das Auto mit der kennzeichen \"+ auto.matrikel + \" hat Mehrere besitzer\");\n        else\n         console.log(\"Das Auto mit der kennzeichen \"+ auto.matrikel + \"  hat ein oder kein besitzer\");\n    &#125;\n    \n    var persons = [new Person(\"omar\", [\"11\", \"10\", \"12\"]), new Person(\"guella\", [\"11\", \"2\", \"3\"])]\n    var auto = new Auto(\"11\");\n    \n    conflict(persons, auto);\n    \n    \n    &#125;\n        </pre>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-Ex71',\n  templateUrl: './Ex71.component.html',\n  styleUrls: ['./Ex71.component.scss']\n})\nexport class Ex71Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div id=\"aufgabe\">\n  <h1>7.1 Funktionen in JavaScript</h1>\n  <p><b>Schreiben Sie eine Funktion <code style=\"color:#ff0000\">identity_function()</code> die ein Argument als\n      Parameter entgegennimmt und eine Funktion zurückgibt, die dieses Argument zurückgibt. </b></p>\n  <p>Geben Sie den JavaScript-Quelltext an: </p>\n  <p>QUELLCODE:</p>\n  <pre>    function identity(x)&#123;\n      return x;\n  &#125;\n  \n  function identity_function(y)&#123;\n      return(identity(y));\n  &#125;\nconsole.log(identity_function(3));\n</pre>\n\n  <p><b>Schreiben Sie eine Addier-Funktion <code style=\"color:#ff0000\">addf()</code>, so dass <code\n        style=\"color:#ff0000\">addf(x)(y)</code> genau <code style=\"color:#ff0000\">x + y </code>zurück gibt.\n      (Es haben also zwei Funktionsaufrufe zu erfolgen.<code style=\"color:#ff0000\"> addf(x)</code> liefert\n      eine Funktion, die auf <code style=\"color:#ff0000\">y</code> angewandt wird.) </b></p>\n  <p>Geben Sie den JavaScript-Quelltext an: </p>\n  <p>QUELLCODE:</p>\n  <pre>    function addf (x) &#123;\nreturn function (y) &#123;\nreturn x+y;\n&#125;\n&#125;\n</pre>\n  <p><b>Schreiben Sie eine Funktion <code style=\"color:#ff0000\">applyf()</code>, die aus einer binären Funktion\n      wie <code style=\"color:#ff0000\">add(x,y)</code> eine Funktion <code style=\"color:#ff0000\">addf\n      </code>berechnet, die mit zwei Aufrufen das gleiche Ergebnis liefert, z.B. <code style=\"color:#ff0000\">addf =\n        applyf(add)</code>; <code style=\"color:#ff0000\">addf(x)(y)</code> soll\n      <code style=\"color:#ff0000\">add(x,y)</code> liefern. Entsprechend<code style=\"color:#ff0000\">\n        applyf(mul)(5)(6) soll 30</code> liefern, wenn mul die binäre Multiplikation ist. </b></p>\n  <p>Geben Sie den JavaScript-Quelltext an: </p>\n  <p>QUELLCODE: </p>\n  <pre>   function add(x,y) &#123;\n  return x+y;\n&#125;\n\nfunction mul(x,y) &#123;\n  return x*y;\n&#125;\n\nfunction applyf(f)&#123;\nreturn function(x)&#123;\nreturn function(y)&#123;\nreturn f(x,y);\n&#125;\n&#125;\n&#125;\n</pre>\n\n  <p><b>Schreiben Sie eine Funktion curry() (von Currying), die eine binäre Funktion und ein Argument nimmt,\n      um daraus eine Funktion zu erzeugen, die ein zweites Argument entgegen nimmt, z.B. add3 = curry(add,\n      3);add3(4) ergibt 7. curry(mul, 5)(6) ergibt 30. </b></p>\n  <p>Geben Sie den JavaScript-Quelltext an: </p>\n  <p>QUELLCODE: </p>\n  <pre>  function curry(f, x)&#123;\nreturn function(y)&#123;\nreturn f(x,y);\n&#125;\n&#125;\n</pre>\n\n  <p><b>Erzeugen Sie die inc-Funktion mit Hilfe einer der Funktionen addf, applyf und curry aus den letzten\n      Aufgaben, ohne die Funktion inc() selbst zu implementieren. (inc(x) soll immer x + 1 ergeben und lässt\n      sich natürlich auch direkt implementieren. Das ist aber hier nicht die Aufgabe.)\n      Vielleicht schaffen Sie es auch, drei Varianten der inc()-Implementierung zu schreiben?</b></p>\n  <p>Geben Sie den JavaScript-Quelltext an: </p>\n  <p>QUELLCODE: </p>\n  <pre>\nfunction curry(f, x)&#123;\nreturn f(x,1) \n&#125;\n</pre>\n\n  <p><b>Schreiben Sie eine Funktion methodize(), die eine binäre Funktion (z.B. add, mul)\n      in eine unäre Methode verwandelt. Nach Number.prototype.add = methodize(add); soll (3).add(4) genau 7\n      ergeben.</b></p>\n  <p>Geben Sie den JavaScript-Quelltext an: </p>\n  <p>QUELLCODE: </p>\n  <pre>\nfunction methodize(f)&#123;\nreturn function(x)&#123;\nreturn f(this,x);\n&#125;\n&#125;\n\nNumber.prototype.add = methodize(add); \n\nconsole.log((3).add(4));\n</pre>\n\n  <p><b>Schreiben Sie eine Funktion methodize(), die eine binäre Funktion (z.B. add, mul)\n      in eine unäre Methode verwandelt. Nach Number.prototype.add = methodize(add); soll (3).add(4) genau 7\n      ergeben.</b></p>\n  <p>Geben Sie den JavaScript-Quelltext an: </p>\n  <p>QUELLCODE: </p>\n  <pre>function demethodize(f) &#123;\nreturn (function(x, y) &#123;\n  return f(x, y);\n&#125;);\n&#125;\nNumber.prototype.add = add;\nconsole.log(demethodize(Number.prototype.add)(5, 6));\n</pre>\n  <p><b>Schreiben Sie eine Funktion twice(), die eine binäre Funktion in eine unäre Funktion umwandelt, die den\n      einen Parameter zweimal weiter reicht.\n      Z.B. var double = twice(add); double(11) soll 22 ergeben; var square = twice(mul); square(11) soll\n      mul(11,11) === 121 ergeben.</b></p>\n  <p>Geben Sie den JavaScript-Quelltext an: </p>\n  <p>QUELLCODE: </p>\n  <pre>function twice(f) &#123;\nreturn (function(x) &#123;\n  return f(x,x);\n&#125;);\n&#125;\nvar double = twice(add);\nvar square = twice(mul);\nconsole.log(double(11));\nconsole.log(square(11));\n</pre>\n  <p><b>Schreiben Sie eine Funktion composeu(), die zwei unäre Funktionen in eine einzelne unäre Funktion\n      transformiert, die beide nacheinander aufruft, z.B. soll composeu(double, square)(3) genau 36\n      ergeben.</b></p>\n  <p>Geben Sie den JavaScript-Quelltext an: </p>\n  <p>QUELLCODE: </p>\n  <pre>function twice(f) &#123;\nreturn (function(x) &#123;\n  return f(x,x);\n&#125;);\n&#125;\nvar double = twice(add);\nvar square = twice(mul);\n\nfunction composeu(d,s) &#123;\nreturn (function(x) &#123;\n  return s(d(x));\n&#125;);\n&#125;\nconsole.log(composeu(double, square)(3));\n\n</pre>\n  <p><b>Schreiben Sie eine Funktion composeb(), die zwei binäre Funktionen in eine einzelne Funktion\n      transformiert, die beide nacheinander aufruft, z.B. composeb(add, mul)(2, 3, 5) soll 25 ergeben.</b></p>\n  <p>Geben Sie den JavaScript-Quelltext an: </p>\n  <p>QUELLCODE: </p>\n  <pre>function composeb(f,m) &#123;\nreturn (function(a, b, c) &#123;\n  return m(c, f(b, a));\n&#125;);\n&#125;\nconsole.log(composeb(add, mul)(2, 3, 5));\n\n\n</pre>\n  <p><b>Schreiben Sie eine Funktion once(), die einer anderen Funktion nur einmal erlaubt, aufgerufen zu werden,\n      z.B. a\n      dd_once = once(add); add_once(3, 4) soll beim ersten Mal 7 ergeben, beim zweiten Mal soll jedoch\n      add_once(3, 4) einen Fehlerabbruch bewirken.</b></p>\n  <p>Geben Sie den JavaScript-Quelltext an: </p>\n  <p>QUELLCODE:</p>\n  <pre>function once(f) &#123;\nvar check = false;\nreturn function(a,b) &#123;\n  if(check) &#123;\n    return (\"Fehlerabbruch \");\n  &#125; else &#123;\n  check=true;\n  return f(a,b)\n  &#125;\n&#125;\n&#125;\n\nadd_once = once(add);\nconsole.log(add_once(3, 4));\nconsole.log(add_once(3, 4));\n\n</pre>\n  <p><b>Schreiben Sie eine Fabrik-Funktion counterf(), die zwei Funktionen inc() und dec() berechnet, die einen\n      Zähler hoch- und herunterzählen. Z.B. counter = counterf(10);\n      Dann soll counter.inc() 11 und counter.dec() wieder 10 ergeben.</b></p>\n  <p>Geben Sie den JavaScript-Quelltext an: </p>\n  <p>QUELLCODE: </p>\n  <pre>function counterf(x) &#123;\nreturn &#123;\n  inc: () => &#123; return ++x; &#125;,\n  dec: () => &#123; return --x; &#125;\n&#125;;\n&#125;\n\ncounter = counterf(10);\n\nconsole.log(counter.inc());\nconsole.log(counter.dec());\n\n</pre>\n  <p><b>Schreiben Sie eine rücknehmbare Funktion revocable(),\n      die als Parameter eine Funktion nimmt und diese bei Aufruf ausführt. Sobald die Funktion aber mit\n      revoke() zurück genommen wurde, führt ein erneuter Aufruf zu einem Fehler. Z.B.\n      <code style=\"color:#ff0000\">temp = revocable(alert); <br>\n        temp.invoke(7); // führt zu alert(7);<br>\n        temp.revoke();<br>\n        temp.invoke(8); // Fehlerabbruch!</code></b></p>\n  <p>Geben Sie den JavaScript-Quelltext an: </p>\n  <p>QUELLCODE: </p>\n  <pre>function revocable(f) &#123;\nreturn &#123;\n  isRevok: false,\n  invoke: (a) => &#123;\n    if(!this.isRevok) &#123;\n      f(a);\n    &#125; else &#123;\n      return (\"Sie Müssen revoke machen\");\n    &#125;\n  &#125;,\n  revoke: () => &#123;\n    this.isRevok = true;\n  &#125;\n&#125;;\n&#125;\ntemp = revocable(add);\ntemp.invoke(7); // führt zu alert(7);\ntemp.revoke();\nconsole.log(temp.invoke(8));\n\n</pre>\n\n  <p><b>Implementieren Sie ein \"Array Wrapper\"-Objekt mit den Methoden get, store und append, so dass ein\n      Angreifer keinen Zugriff auf das innere, private Array hat.\n      <code style=\"color:#ff0000\">\n        my_vector = vector();<br>\n        my_vector.append(7);<br>\n        my_vector.store(1, 8);<br>\n        my_vector.get(0) // 7<br>\n        my_vector.get(1) // 8 </code> </b></p>\n\n  <p>Geben Sie den JavaScript-Quelltext an: </p>\n  <p>QUELLCODE:</p>\n  <pre> function add(x, y) &#123;\n  return x+y;\n&#125;\nfunction mul(x, y) &#123;\n  return x*y;\n&#125;\nfunction vector() &#123;\nlet v=[];\nreturn &#123;\n  append:(x) => &#123; v.push(x); &#125;,\n  store: (index,x) => &#123;v[index] = x;&#125;, \n  get:(index) => &#123; return vec[index]; &#125;\n&#125;\n&#125;\n\nmy_vector = vector();\nmy_vector.append(7);\nmy_vector.store(1, 8);\nconsole.log(my_vector.get(0));\nconsole.log(my_vector.get(1));\n\n\n\n</pre>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-Ex91',\n  templateUrl: './Ex91.component.html',\n  styleUrls: ['./Ex91.component.scss']\n})\nexport class Ex91Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"middlepane\">\n    <div id=\"aufgabe\">\n      <h1>9.1. SVG Grafik von Hand erstellen</h1>\n      <p><b>Codieren Sie eine HTML-Datei mit Inline SVG, so dass sich folgendes Aussehen ergibt:</b></p>\n      <img src=\"https://kaul.inf.h-brs.de/we/assets/img/use_the_platform.png\" style=\"max-width:300px;width:100%\">\n      <p><b> Fügen Sie als Hover-Effekt eine CSS-Animation hinzu, die die Größe der SVG-Grafik verdoppelt, wenn man mit\n          dem\n          Cursor über die Grafik geht.</b></p>\n      <p>Geben Sie hier den vollständigen HTML- und SVG-Code ein: </p>\n      <p><b>QUELLCODE:</b> </p>\n      <pre>&lt;!DOCTYPE html>\n        &lt;html>\n         &lt;body>\n        \n          &lt;h1>SVG Use The Platform&lt;/h1>\n        \n          &lt;svg data-v-2c77a4f5=\"\" width=\"300\" height=\"300\">\n              &lt;rect data-v-2c77a4f5=\"\" width=\"300\" height=\"300\" style=\"fill: rgb(184, 101, 101);\">&lt;/rect>      \n        \n              &lt;text data-v-2c77a4f5=\"\" x=\"30\" y=\"70\" style=\"fill:White;font-weight:400;font-size:50px;font-family:Arial\"> Use &lt;/text>      \n        \n              &lt;line data-v-2c77a4f5=\"\" x1=\"30\" y1=\"85\" x2=\"275\" y2=\"85\" style=\"stroke:White;stroke-width:4\">&lt;/line>\n              &lt;text data-v-2c77a4f5=\"\" x=\"30\" y=\"165\" style=\"fill:White;font-weight:400;font-size:50px;font-family:Arial\"> The &lt;/text>\n              &lt;line data-v-2c77a4f5=\"\" x1=\"30\" y1=\"180\" x2=\"275\" y2=\"180\" style=\"stroke:White;stroke-width:4\">&lt;/line>      \n              &lt;text data-v-2c77a4f5=\"\" x=\"30\" y=\"265\" style=\"fill:White;font-weight:400;font-size:50px;font-family:Arial\"> Platform &lt;/text>      \n                    \n              &lt;line data-v-2c77a4f5=\"\" x1=\"30\" y1=\"280\" x2=\"275\" y2=\"280\" style=\"stroke:White;stroke-width:4\">&lt;/line>            \n          &lt;/svg>\n         \n         &lt;/body>\n        &lt;/html>\n        \n        &lt;style>\n        svg:hover &#123;\n          transform: scale(2);\n        &#125;\n        svg &#123;\n          transition: all 0s;\n          transform-origin: 10% 0%;\n        &#125;\n        &lt;/style>\n        \n          </pre>\n    </div>\n  </div>\n\n  <div class=\"rightpane\">\n    <p id=\"ausfuhren\"> QUELLCODE AUSFÜHREN</p>\n\n    <body>\n\n      <p>SVG Use The Platform<p>\n\n          <svg data-v-2c77a4f5=\"\" width=\"300\" height=\"300\">\n            <rect data-v-2c77a4f5=\"\" width=\"300\" height=\"300\" style=\"fill: rgb(184, 101, 101);\"></rect>\n\n            <text data-v-2c77a4f5=\"\" x=\"30\" y=\"70\" style=\"fill:White;font-weight:400;font-size:50px;font-family:Arial\">\n              Use\n            </text>\n\n            <line data-v-2c77a4f5=\"\" x1=\"30\" y1=\"85\" x2=\"275\" y2=\"85\" style=\"stroke:White;stroke-width:4\"></line>\n            <text data-v-2c77a4f5=\"\" x=\"30\" y=\"165\" style=\"fill:White;font-weight:400;font-size:50px;font-family:Arial\">\n              The\n            </text>\n            <line data-v-2c77a4f5=\"\" x1=\"30\" y1=\"180\" x2=\"275\" y2=\"180\" style=\"stroke:White;stroke-width:4\"></line>\n            <text data-v-2c77a4f5=\"\" x=\"30\" y=\"265\" style=\"fill:White;font-weight:400;font-size:50px;font-family:Arial\">\n              Platform </text>\n\n            <line data-v-2c77a4f5=\"\" x1=\"30\" y1=\"280\" x2=\"275\" y2=\"280\" style=\"stroke:White;stroke-width:4\"></line>\n          </svg>\n\n    </body>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-Ex113',\n  templateUrl: './Ex113.component.html',\n  styleUrls: ['./Ex113.component.scss']\n})\nexport class Ex113Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"middlepane\">\n    <div id=\"aufgabe\">\n\n      <h1>11.3 WWW-Navigator zum Content-Editor ausbauen </h1>\n      <p><b>Bauen Sie Ihren WWW-Navigator zum Content-Editor aus, mit dem Sie weitere Inhalte hinzu fügen können,\n          die persistent auf dem Server mittels PHP gespeichert werden. Schreiben Sie Ihre PHP-Scripte so,\n          dass es zu keinen <a href=\"https://de.wikipedia.org/wiki/Wettlaufsituation\"\n            target=\"_blank\">\"Nebenläufigkeitsartefakten\"</a> kommen kann, egal wie viele Nutzer gleichzeitig editieren\n          und\n          speichern.<br><br>\n\n          Speichern Sie die Inhalte Ihres WWW-Navigators auf dem Server www2.inf.h-brs.de. Erweitern Sie Ihren\n          WWW-Navigator\n          um eine Edit-Funktionalität, so dass Inhalte editiert und ergänzt werden können. Vermeiden Sie die <a\n            href=\"https://de.wikipedia.org/wiki/Verlorenes_Update\" target=\"_blank\">\"Lost Update-Anomalie \"</a>\n          .<br><br>\n\n          Schützen Sie Ihre Inhalte mit einem Login. </b></p>\n      <p> Login QUELLCODE:</p>\n\n      <pre>&lt;!DOCTYPE html>\n        &lt;html>\n        &lt;head>\n        \n        &lt;/head>\n        \n        \n            &lt;div class=main> \n            &lt;h1>LOGIN&lt;/h1>\n        &lt;form method=\"post\">\n                Username:&lt;br>\n                &lt;input type=\"text\" name=\"username\">\n                &lt;br>\n                PASSWORD:&lt;br>\n                &lt;input type=\"password\" name=\"password\">\n                &lt;br>\n                &lt;input type=\"submit\" >\n        &lt;/form>\n        \n        \n        \n        &lt;/div>\n        \n        &lt;/html>\n        \n        &lt;?php\n        \n            $username = $_POST['username'];\n            $Password = $_POST[\"password\"];\n        \n            $lines = file(\"./Accounts.csv\");\n            $Account = false;\n            foreach($lines as $line_num => $line)&#123;\n                list( $csvUsername, $csvPassword) = explode(\",\", $line);\n                if($csvUsername === hash(\"sha256\", $username))&#123;\n                    if($csvPassword === hash(\"sha256\", $Password) . \"\\n\")&#123;\n                        echo \"&lt;script>alert('Login erfolgreich!')&lt;/script>\";\n                header(\"Location: ./WWW-Navigator.php\");\n                        $Account = true;\n                        break;\n                    &#125;\n                &#125;\n            &#125;\n            if(!$Account && ($username || $Password))&#123;\n                echo \"&lt;script>alert('Name oder Password falsch!')&lt;/script>\";\n            &#125;\n        \n        ?>\n        \n        \n\t</pre>\n      <p> WWW-Navigator QUELLCODE:</p>\n\n\n      <pre>\n            &lt;!doctype html>\n\n            &lt;style>\n             textarea&#123; position: absolute;\n              top: 107px;\n              width: 25%;\n              height: 90px;\n              left: 9px;\n            &#125;\n            &lt;/style>\n            \n            \n            &lt;div class=\"main\">\n            &lt;h1> WWW-Navigator mit PHP&lt;/h1>\n            &lt;form method=\"post\">\n                    &lt;select name=\"top_thema\">\n                        &lt;option style=\"position: absolute;top: 81px; \" value=\"We_App\">We_App&lt;/option>\n                        &lt;option style=\"position: absolute;top: 81px;width: 5%;position: absolute;top: 81px;width: 5%;left: 132px;\" value=\"Aufgaben\">Aufgaben&lt;/option>\n                    &lt;/select>\n                    &lt;select name=\"sub_thema\">\n                    &lt;/select>\n                    &lt;textarea name=\"content\">&lt;/textarea>\n                    &lt;input type=\"submit\" value=\"Submit\">\n            &lt;/form>\n            &lt;/div>\n            &lt;?PHP\n            $datei = './content.json';\n            $contents = file_get_contents( $datei );\n            $json = json_decode( $contents, true );\n            ?>\n            &lt;script>\n                let json = &lt;?PHP echo json_encode( $json ) ?>;\n                let sub_thema = document.querySelector('select[name=\"sub_thema\"]');\n                let top_thema = document.querySelector('select[name=\"top_thema\"]');\n                let content = document.querySelector('textarea[name=\"content\"');\n                    top_thema.addEventListener('click', e => &#123;\n                    content.innerHTML = \"\";\n                    for(let i = sub_thema.options.length-1; i >= 0; i--)&#123; sub_thema.options[i] = null;&#125;          \n                   \n                 Object.keys( json[ e.target.value ] ).forEach( key => &#123;\n                        let newOption = document.createElement('option');\n                        newOption.value = key;\n                        newOption.innerText = key;\n                        sub_thema.appendChild( newOption ); &#125;);\n                &#125;);\n                sub_thema.addEventListener('click', e => &#123;\n                    if(json[top_thema.value][sub_thema.value]) \n                &#123;content.innerHTML = json[top_thema.value][sub_thema.value];&#125;\n                     else &#123;content.innerHTML = \"\";&#125;&#125;);\n            \n            \n            &lt;/script>\n            \n            &lt;?PHP\n            \n            if ( isset($_POST[ 'top_thema' ]) && isset($_POST[ 'sub_thema' ]) && isset($_POST[ 'content' ]) )&#123;\n                $top_thema = $_POST[ 'top_thema' ];\n              $content = $_POST[ 'content' ];\n                $sub_thema = $_POST[ 'sub_thema' ];\n            \n                    $json[ $top_thema ][ $sub_thema ] = $content;\n                    if ( file_put_contents( $datei, json_encode( $json, true )) )&#123;\n                        echo \"&lt;script>alert('Erfolgreich gespeichert!')&lt;/script>\";\n                        header(\"Refresh:0\");\n                    &#125;\n            &#125;\n            ?>\n             \n\n\t</pre>\n\n    </div>\n  </div>\n  <div class=\"rightpane\">\n    <p id=\"ausfuhren\"> QUELLCODE AUSFÜHREN</p>\n    <a class=\"execute\" href=\"http://localhost/phpscript/LogNavigator.php\" target=\"_blank\">klicken SIE HIER BITTE !</a>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-Ex102',\n  templateUrl: './Ex102.component.html',\n  styleUrls: ['./Ex102.component.scss']\n})\nexport class Ex102Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div id=\"aufgabe\">\n  <h1>10.2 Fehler finden mit TypeScript</h1>\n  <p><b>Gegeben sei folgendes fehlerbehaftete JavaScript-Programm. Ergänzen Sie dieses um möglichst viele Typisierungen\n      und übersetzen Sie es in ein TypeScript-Programm.</b></p>\n\n  <img src=\"assets/Screen.jpg\" style=\"max-width:600px;width:100%\">\n\n  <p>Was ist der Fehler in dem gegebenen JavaScript-Code?</p>\n  <pre>das Programm wird hier true mit 1 und false mit 0 ersetzen und beide werte addiert was im \n\tPrinzip add addiert nur integer Werte deswegen soll die Datentype von x und y  deklariert werden. \n\t</pre>\n\n  <p>Geben Sie hier Ihren TypeScript-Code ein:</p>\n  <pre>const add = (x:number,y:number) => x+y;\nconst equals = (x:boolean,y:boolean) => x===y;\n\nconsole.log( add(1,2) ); \nconsole.log( add(true, true ) ); \nconsole.log( add(true, false ) ); \nvar x = y = 1; \nconsole.log( add(equals(x,y), equals(y,x)) );\n\t</pre>\n  <p>Welche Fehler meldet TypeScript?</p>\n  <pre>Fehler 1:\nconsole.log( add(true, true ) ); \nboolean type anstatt number abgegeben \n\nFehler 2:\nvar x = y = 1; \ny ist nicht Deklariert\n\nFehler 3:\nconsole.log( add(equals(x,y), equals(y,x)) );\nequals liefert Booleane werte zurück aber add soll number werte addieren.\n\t</pre>\n  <p>Geben Sie weitere Beispiele an, wie TypeScript bei der Fehlersuche helfen kann:</p>\n  <pre>let erste= () => (   übung:10, aufgabe: 2  );\nlet zweite = () => (   übung:10 ,aufgabe: 2 , frage:\"letzte_Frage\"  );\nerste= zweite ;  //works\nzweite = erste;  //Not working</pre>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-Ex101',\n  templateUrl: './Ex101.component.html',\n  styleUrls: ['./Ex101.component.scss']\n})\nexport class Ex101Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div id=\"aufgabe\">\n  <h1>10.1 Static classes in TypeScript </h1>\n  <p><b>Gibt es in TypeScript statische Klassen? Erläutern Sie den Unterschied von TypeScript zu\n      anderen objekt-orientierten, statisch typisierten Programmiersprachen wie Java und C#.</b></p>\n\n  <p>Geben Sie hier Ihre Antwort und Erläuterung ein: </p>\n  <pre>in TypeScript  ist die Typisierung strukturelle, im gegensatz die andere Programmieresprachen wie java und C#, die nominale Typisierung sind.\nin TypeScript  haben wir die möglichkeit, Variablen aus zwei verschiedenen Classen,die gleiche strukturiert sind , in einer \nFunktion zu lesen und zu ändern \n\t</pre>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-Ex103',\n  templateUrl: './Ex103.component.html',\n  styleUrls: ['./Ex103.component.scss']\n})\nexport class Ex103Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div id=\"aufgabe\">\n  <h1>10.3. TypeScript auf <a href=\"https://deno.land/\" target=\"_blank\">Deno</a></h1>\n  <p><b>Auf Deno ist TypeScript ohne Übersetzung direkt ablauffähig. Deno ist also die Runtime Engine für TypeScript.\n\n      Schreiben Sie in TypeScript möglichst umfangreich statisch typisiert ein auf Deno ablauffähiges Programm <code\n        style=\"color:#ff0000\">server.ts</code>,\n      das Sie mit<code style=\"color:#ff0000\"> deno run --allow-net server.ts </code> starten können, das die <a\n        href=\"https://www.rki.de/DE/Content/InfAZ/N/Neuartiges_Coronavirus/Fallzahlen.html\"\n        target=\"_blank\">COVID-19-Fallzahlen in Deutschland</a> einliest, Minimum, Maximum,\n      Durchschnitt und Summe berechnet und diese auf einer Webseite ausgibt.\n\n      Ein Beispiel-Programm zu server.ts finden Sie im<a href=\"https://deno.land/manual\" target=\"_blank\">\n        Deno-Manual</a> unter <a\n        href=\"https://deno.land/manual@v1.16.4/getting_started/first_steps#making-an-http-request\"\n        target=\"_blank\">Making an HTTP request</a></b></p>\n  <p>Geben Sie hier Ihr Programm <code style=\"color:#ff0000\">server.ts</code> ein:</p>\n  <pre>class Corona &#123;\n    constructor(public place: string, public cases: number) &#123;\n    &#125;\n&#125;\n\nclass Stats &#123;\n    constructor(public min: number, public max: number, public average: number) &#123;\n    &#125;\n&#125;\n\nconst getStats = (coronaCases: Corona[]): Stats => &#123;\n    let sum = 0;\n    let max: number = coronaCases[0].cases;\n    let min: number = coronaCases[0].cases;\n    coronaCases.forEach((c) => &#123;\n        sum += c.cases\n        if (c.cases > max) max = c.cases;\n        if (c.cases &lt; min) min = c.cases;\n    &#125;)\n\n    return new Stats(min, max, sum / coronaCases.length);\n&#125;\n\nconst coronaCases: Corona[] = [\n    new Corona('Baden-Württenberg', 932965),\n    new Corona('Bayern', 1246136),\n    new Corona('Berlin', 297446),\n    new Corona('Brandeburg', 210009),\n    new Corona('Bremen', 42434),\n    new Corona('Hamburg', 122871)\n]\n\n// Start listening on port 8080 of localhost.\nconst server = Deno.listen(&#123;port: 8080&#125;);\nconsole.log(HTTP webserver running.  Access it at:  http://localhost:8080/);\n\n// Connections to the server will be yielded up as an async iterable.\nfor await (const conn of server) &#123;\n    // In order to not be blocking, we need to handle each connection individually\n    // without awaiting the function\n    serveHttp(conn);\n&#125;\n\nasync function serveHttp(conn: Deno.Conn) &#123;\n    // This \"upgrades\" a network connection into an HTTP connection.\n    const httpConn = Deno.serveHttp(conn);\n    // Each request sent over the HTTP connection will be yielded as an async\n    // iterator from the HTTP connection.\n    for await (const requestEvent of httpConn) &#123;\n        // The native HTTP server uses the web standard Request and Response\n        // objects.\n        const stats = getStats(coronaCases);\n        const body = min: $&#123;stats.min&#125;, max: $&#123;stats.max&#125;, average: $&#123;stats.average&#125;\n        // The requestEvent's .respondWith() method is how we send the response\n        // back to the client.\n        requestEvent.respondWith(\n            new Response(body, &#123;\n                status: 200,\n            &#125;),\n        );\n    &#125;\n&#125;\n  \n\t\t</pre>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-Ex32',\n  templateUrl: './Ex32.component.html',\n  styleUrls: ['./Ex32.component.scss']\n})\nexport class Ex32Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"middlepane\">\n    <div id=\"aufgabe\">\n      <h1>Aufgabe 3.2. Responsiv mit Grid Mobile-First</h1>\n      <p><b>Spielen Sie zunächst das <a href=\"https://cssgridgarden.com/#de\" target=\"_blank\">Grid Garden </a>-Spiel, um\n          Grid Layout zu lernen. </b></p>\n      <p>Implementieren Sie dann das gleiche responsive Webdesign wie in Aufgabe 3.1 allerdings mit Grid und der\n        Mobile-First-Strategie! Vermeiden Sie diesmal außerdem das Erscheinen von Scrollbars. </p>\n\n      <p><b>QUELLCODE:</b> </p>\n      <pre> &lt;!DOCTYPE html>\n        &lt;html lang=\"en\">\n        &lt;head>\n        &lt;meta charset=\"UTF-8\">\n        &lt;/head>\n        \n            \n            &lt;style>\n               header &#123; \n                   grid-area: header;\n                   background-color: red;\n                &#125;\n        \n               main &#123; \n                   grid-area: main;\n                   background-color: blue;\n                &#125;\n        \n               aside.left &#123; \n                   grid-area: left;\n                   background-color: lightgreen; \n                &#125;\n        \n               aside.right &#123; \n                   grid-area: right; \n                   background-color: pink; \n                &#125;\n        \n                .body &#123;\n                        display: grid;\n                        min-height: 100vh;\n                        height: 100vh;\n                        grid-template-areas:\n                                      \"header\"\n                                      \"left\"\n                                      \"main\"\n                                      \"main\"\n                                      \"right\";\n                &#125;\n        \n               \n        \n                @media screen and (min-width: 500px) &#123;\n                  .body &#123;\n                  display: grid;\n                  grid-template-areas: \"header header\"\n                                       \"left main \"\n                                         \"right right\"\n                                         ;\n                  grid-template-columns: 1fr 2fr;\n                  grid-template-rows: 150px 1fr 100px 30px;\n                &#125;\n                \n            &#125; \n        \n                @media screen and (min-width: 800px) &#123;\n                  .body &#123;\n                  display: grid;\n                  grid-template-areas: \"header header header\"\n                                       \"left main right\";\n                  grid-template-columns: 150px 1fr 150px;\n                  grid-template-rows: 100px 1fr 30px;\n                &#125;\n            &#125;\n        \n                \n            &lt;/style>\n            \n                &lt;body class=\"body\">\n                &lt;header >&lt;/header>\n                &lt;main >&lt;/main>\n                &lt;aside class=\"left\">&lt;/aside>\n                &lt;aside class=\"right\">&lt;/aside>\n            &lt;/body>\n        &lt;/html>\n          </pre>\n    </div>\n  </div>\n\n  <div class=\"rightpane\">\n    <p id=\"ausfuhren\"> QUELLCODE AUSFÜHRUNG</p>\n    <div class=\"Seite_html\">\n\n      <body class=\"body\">\n        <header></header>\n        <main></main>\n        <aside class=\"left\"></aside>\n        <aside class=\"right\"></aside>\n      </body>\n    </div>\n  </div>\n</div>\n","import { AboutMeComponent } from './exercice/aboutMe/aboutMe.component';\nimport { Ex33Component } from './exercice/Ex33/Ex33.component';\nimport { Ex65Component } from './exercice/Ex65/Ex65.component';\nimport { Ex113Component } from './exercice/Ex113/Ex113.component';\nimport { Ex112Component } from './exercice/Ex112/Ex112.component';\nimport { Ex111Component } from './exercice/Ex111/Ex111.component';\nimport { Ex103Component } from './exercice/Ex103/Ex103.component';\nimport { Ex102Component } from './exercice/Ex102/Ex102.component';\nimport { Ex101Component } from './exercice/Ex101/Ex101.component';\nimport { Ex92Component } from './exercice/Ex92/Ex92.component';\nimport { Ex91Component } from './exercice/Ex91/Ex91.component';\nimport { Ex82Component } from './exercice/Ex82/Ex82.component';\nimport { Ex81Component } from './exercice/Ex81/Ex81.component';\nimport { Ex72Component } from './exercice/Ex72/Ex72.component';\nimport { Ex71Component } from './exercice/Ex71/Ex71.component';\nimport { Ex64Component } from './exercice/Ex64/Ex64.component';\nimport { Ex63Component } from './exercice/Ex63/Ex63.component';\nimport { Ex62Component } from './exercice/Ex62/Ex62.component';\nimport { Ex61Component } from './exercice/Ex61/Ex61.component';\nimport { Ex53Component } from './exercice/Ex53/Ex53.component';\nimport { Ex52Component } from './exercice/Ex52/Ex52.component';\nimport { Ex51Component } from './exercice/Ex51/Ex51.component';\nimport { Ex44Component } from './exercice/Ex44/Ex44.component';\nimport { Ex43Component } from './exercice/Ex43/Ex43.component';\nimport { Ex42Component } from './exercice/Ex42/Ex42.component';\nimport { Ex41Component } from './exercice/Ex41/Ex41.component';\nimport { Ex32Component } from './exercice/Ex32/Ex32.component';\nimport { Ex31Component } from './exercice/Ex31/Ex31.component';\nimport { Ex23Component } from './exercice/Ex23/Ex23.component';\nimport { Ex22Component } from './exercice/Ex22/Ex22.component';\nimport { Ex21Component } from './exercice/Ex21/Ex21.component';\nimport { Ex14Component } from './exercice/Ex14/Ex14.component';\nimport { Ex13Component } from './exercice/Ex13/Ex13.component';\nimport { Ex12Component } from './exercice/Ex12/Ex12.component';\nimport { Sheet1Ex1Component } from './exercice/sheet1Ex1/sheet1Ex1.component';\nimport { ExerciceComponent } from './exercice/exercice.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {path: '' , component: ExerciceComponent },\n  {path: 'exercice' , component: ExerciceComponent,  children :[\n    {path: 'aboutMe' , component: AboutMeComponent },\n    {path: 'sheet1Ex1' , component: Sheet1Ex1Component },\n    {path: 'Ex12' , component: Ex12Component },\n    {path: 'Ex13' , component: Ex13Component },\n    {path: 'Ex14' , component: Ex14Component },\n    {path: 'Ex21' , component: Ex21Component },\n    {path: 'Ex22' , component: Ex22Component },\n    {path: 'Ex23' , component: Ex23Component },\n    {path: 'Ex31' , component: Ex31Component },\n    {path: 'Ex32' , component: Ex32Component },\n    {path: 'Ex33' , component: Ex33Component },\n    {path: 'Ex41' , component: Ex41Component },\n    {path: 'Ex42' , component: Ex42Component },\n    {path: 'Ex43' , component: Ex43Component },\n    {path: 'Ex44' , component: Ex44Component },\n    {path: 'Ex51' , component: Ex51Component },\n    {path: 'Ex52' , component: Ex52Component },\n    {path: 'Ex53' , component: Ex53Component },\n    {path: 'Ex61' , component: Ex61Component },\n    {path: 'Ex62' , component: Ex62Component },\n    {path: 'Ex63' , component: Ex63Component },\n    {path: 'Ex64' , component: Ex64Component },\n    {path: 'Ex65' , component: Ex65Component },\n    {path: 'Ex71' , component: Ex71Component },\n    {path: 'Ex72' , component: Ex72Component },\n    {path: 'Ex81' , component: Ex81Component },\n    {path: 'Ex82' , component: Ex82Component },\n    {path: 'Ex91' , component: Ex91Component },\n    {path: 'Ex92' , component: Ex92Component },\n    {path: 'Ex101' , component: Ex101Component },\n    {path: 'Ex102' , component: Ex102Component },\n    {path: 'Ex103' , component: Ex103Component },\n    {path: 'Ex111' , component: Ex111Component },\n    {path: 'Ex112' , component: Ex112Component },\n    {path: 'Ex113' , component: Ex113Component },\n  ] }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { saveAs } from 'file-saver';\n\n@Component({\n  selector: 'app-aboutMe',\n  templateUrl: './aboutMe.component.html',\n  styleUrls: ['./aboutMe.component.css']\n})\nexport class AboutMeComponent implements OnInit {\n\n  feedBack : BlobPart ;\n\n  constructor() { }\n\n  ngOnInit() {\n\n  }\n\n  saveFile(text : BlobPart) {\n    const blob = \n        new Blob([\n                 text], \n                 {type: \"text/plain;charset=utf-8\"});\n    saveAs(blob, \"feed-back.txt\");\n}\n\n}\n","<div class=\"container\">\n  <div class=\"middlepane\">\n    <div id=\"aufgabe\">\n      <h1>Introduction of myself</h1>\n\n      <p id=\"name\"> OMAR GUELLA<br> <code>(oguell2s)</code> </p>\n      <ul>\n        <li id=\"st\"> Hochschule Bonn-Rhein-Sieg</li>\n        <li id=\"pr\"> Hausarbeit Einführung in Web Engineering </li>\n        <li id=\"jahr\"> WS 21</li>\n        <li> Kontakt: omar.guella@smail.inf.h-brs.de</li>\n        <li id=\"git\"> Link Github:</li>\n        <li> <a id=\"git\" href=\"https://github.com/omarguella/-Web-Engineering\" target=\"_blank\"> Github AUFGABEN im\n            Lauf des Semesters </a> </li>\n        <li><a id=\"git\" href=\"https://github.com/omarguella/Web_Einf_Projekt\" target=\"_blank\"> Github for the PROJECT\n          </a></li>\n        <li id=\"angular\"> used Technology ANGULAR </li>\n        <li> <img src=\"assets/angular.png\" id=\"logo\" style=\"max-width:260px;width:100%\" /> </li>\n        <a style=\"color:red;font-size:38px;\" href=\"mailto:omar.guella@smail.inf.h-brs.de?subject=Feedback&body=Message\">\n          Send Feedback\n        </a>\n\n      </ul>\n\n      <h1>Introduction of the Project</h1>\n      <p id=\"pro\"> Die Aufgabe im Semesterprojekt ist die Erstellung und Pflege einer eigenen Homepage im Rahmen der\n        wöchentlichen Praktikumsaufgaben. <br>In meiner Webseite sind sowohl die Aufgabenstellungen als auch die\n        Lösungen präsentiert.<br>Bei jedem Vorlesungsthema finden Sie LINKS die Aufgaben,die ich im Laufe des Semesters\n        abgegeben habe. </p>\n\n    </div>\n  </div>\n  <div class=\"rightpane\">\n\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-Ex21',\n  templateUrl: './Ex21.component.html',\n  styleUrls: ['./Ex21.component.scss']\n})\nexport class Ex21Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div id=\"aufgabe\"><h1>Aufgabe 2.1. CSS Selektoren und CSS Farben</h1>\n\t<p><b>Berechnen Sie die Spezifität folgender CSS-Selektoren:</b></p>\n\t<p style=\"color:#FF0000\"><b>1.div div div:focus .inner</b></p>\n\t<p style=\"color:#FF0000\"><b>2.h1 + div.main</b></p>\n\t<p style=\"color:#FF0000\"><b>3.div a:link[href*='h-brs']</b></p>\n\t<p style=\"color:#FF0000\"><b>4.nav > a:hover::before</b></p>\n\t<p style=\"color:#FF0000\"><b>5.ul#primary-nav li.active</b></p>\n\n<p>1: div div div:focus .inner = 32 Spezifität </p>\n<p>2: h1 + div.main = 12 Spezifität </p>\n<p>3: div a:link[href*='h-brs'] = 22 Spezifität </p>\n<p>4: nav > a:hover::before =13 Spezifität </p>\n<p>5: ul#primary-nav li.active = 112 Spezifität </p>\n\t\n\t<p><b>Rechnen Sie folgende RGB-Werte in HSL-Werte um:</b></p>\n\t<p style=\"color:#FF0000\"><b>1. #ffffff</b></p>\n\t<p style=\"color:#FF0000\"><b>2.#000</b></p>\n\t<p style=\"color:#FF0000\"><b>3.#ab0978</b></p>\n\t<p style=\"color:#FF0000\"><b>4.rgb(127,255,33)</b></p>\n\t<p style=\"color:#FF0000\"><b>5.rgba(255,127,33,0.8)</b></p>\n\n<p>1: #ffffff = HSL (0,0%,1000%)</p>\n<p>2: #000= HSL (0,0%,0%)</p>\n<p>3: #ab0978=HSL(319, 90%, 35%) </p>\n<p>4: rgb(127,255,33)=HSL(95, 100%, 56%) </p>\n<p>5: rgba(255,127,33,0.8) = hsla(25, 100%, 56%, 0.8) </p>\n\t\n\t</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}